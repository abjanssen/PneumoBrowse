{"version":3,"file":"static/js/4169.1633a3d7.chunk.js","mappings":"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","sources":["../../../node_modules/@mui/material/Skeleton/Skeleton.js","../../../node_modules/@mui/material/Skeleton/skeletonClasses.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../../../node_modules/@mui/x-data-grid/utils/Store.js","../../../node_modules/@mui/x-data-grid/utils/EventManager.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridTheme.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../../../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../../../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../../../node_modules/@mui/x-data-grid/utils/exportAs.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../../../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../../../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../../../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../../../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../../../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../../../node_modules/@mui/x-data-grid/utils/throttle.js","../../../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../../../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../../../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../../../node_modules/@mui/x-data-grid/internals/utils/propValidation.js","../../../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../../../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../../../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../../../node_modules/@mui/x-data-grid/material/index.js","../../../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../../../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../../../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../../../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../../../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../../../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../../../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../../../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../../../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../../../node_modules/@mui/x-data-grid/components/GridFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../../../node_modules/@mui/x-data-grid/components/GridHeader.js","../../../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../../../node_modules/@mui/x-data-grid/components/GridPagination.js","../../../node_modules/@mui/x-data-grid/components/GridRow.js","../../../node_modules/@mui/x-data-grid/components/GridRowCount.js","../../../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../../../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../../../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../../../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../../../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../../../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../../../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../../../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../../../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../../../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../../../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../../../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../../../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../../../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../../../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../../../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../../../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../../../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../../../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../../../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../../../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../../../node_modules/@mui/x-data-grid/components/GridHeaders.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../../../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/constants/gridClasses.js","../../../node_modules/@mui/x-data-grid/constants/gridDetailPanelToggleField.js","../../../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../../../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../../../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../../../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../../../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../../../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../../../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useResizeObserver.js","../../../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../../../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../../../node_modules/@mui/x-data-grid/material/icons/index.js","../../../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../../../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../../../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../../../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../../../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../../../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../../../node_modules/reselect/es/index.js","../../../node_modules/@mui/x-data-grid/utils/createSelector.js","../../../node_modules/@mui/x-data-grid/utils/domUtils.js","../../../node_modules/@mui/x-data-grid/utils/fastMemo.js","../../../node_modules/@mui/x-data-grid/utils/fastObjectShallowCompare.js","../../../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../../../node_modules/@mui/x-data-grid/utils/utils.js","../../../node_modules/@mui/x-data-grid/utils/warning.js","../../../node_modules/reselect/es/defaultMemoize.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import * as React from 'react';\nimport { localStorageAvailable } from '../../utils/utils';\nimport { useGridApiMethod } from '../utils';\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","import * as React from 'react';\nimport { Store } from '../../utils/Store';\nimport { useGridApiMethod } from '../utils/useGridApiMethod';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { EventManager } from '../../utils/EventManager';\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from './useGridRefs';\nimport { useGridTheme } from './useGridTheme';\nimport { useGridLoggerFactory } from './useGridLoggerFactory';\nimport { useGridApiInitialization } from './useGridApiInitialization';\nimport { useGridLocaleText } from './useGridLocaleText';\nimport { useGridPipeProcessing } from './pipeProcessing';\nimport { useGridStrategyProcessing } from './strategyProcessing';\nimport { useGridStateInitialization } from './useGridStateInitialization';\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridTheme(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nexport const useGridTheme = apiRef => {\n  const theme = useTheme();\n  if (!apiRef.current.state.theme) {\n    apiRef.current.state.theme = theme;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        theme\n      }));\n    }\n  }, [apiRef, theme]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\nimport { buildWarning } from '../../../../utils/warning';\nfunction sanitizeCellValue(value, delimiterCharacter, shouldAppendQuotes) {\n  if (typeof value === 'string') {\n    if (shouldAppendQuotes) {\n      const escapedValue = value.replace(/\"/g, '\"\"');\n      // Make sure value containing delimiter or line break won't be split into multiple rows\n      if ([delimiterCharacter, '\\n', '\\r', '\"'].some(delimiter => value.includes(delimiter))) {\n        return `\"${escapedValue}\"`;\n      }\n      return escapedValue;\n    }\n    return value;\n  }\n  return value;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    delimiterCharacter,\n    ignoreValueFormatter,\n    shouldAppendQuotes\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, delimiterCharacter, shouldAppendQuotes);\n};\nconst objectFormattedValueWarning = buildWarning(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.delimiterCharacter;\n    }\n    if (value === null || value === undefined) {\n      this.rowString += '';\n    } else if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.delimiterCharacter, this.options.shouldAppendQuotes);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  delimiterCharacter,\n  ignoreValueFormatter,\n  shouldAppendQuotes\n}) => {\n  const row = new CSVRow({\n    delimiterCharacter,\n    shouldAppendQuotes\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        objectFormattedValueWarning();\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      delimiterCharacter,\n      ignoreValueFormatter,\n      shouldAppendQuotes\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    delimiterCharacter,\n    includeHeaders,\n    includeColumnGroupsHeaders,\n    ignoreValueFormatter,\n    apiRef,\n    shouldAppendQuotes\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    delimiterCharacter,\n    ignoreValueFormatter,\n    shouldAppendQuotes\n  })}\\r\\n`, '').trim();\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        delimiterCharacter,\n        sanitizeCellValue,\n        shouldAppendQuotes\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    delimiterCharacter,\n    sanitizeCellValue,\n    shouldAppendQuotes\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from '../../utils';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { serializeCellValue } from '../export/serializers/csvSerializer';\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'c' && !event.shiftKey && !event.altKey)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        // TODO: make it configurable\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          delimiterCharacter: clipboardCopyCellDelimiter,\n          ignoreValueFormatter,\n          shouldAppendQuotes: false\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { gridColumnMenuSelector } from './columnMenuSelector';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from './gridColumnsSelector';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from './gridColumnsUtils';\nimport { GridPreferencePanelsValue } from '../preferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions().viewportInnerSize.width));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), viewportInnerSize.width));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /**\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridDensitySelector } from './densitySelector';\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns';\nimport { gridFilteredSortedRowIdsSelector } from '../filter';\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { exportAs } from '../../../utils/exportAs';\nimport { buildCSV } from './serializers/csvSerializer';\nimport { getColumnsToExport, defaultGetRowsToExport } from './utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridCsvExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      delimiterCharacter: options.delimiter || ',',\n      includeHeaders: options.includeHeaders ?? true,\n      includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n      ignoreValueFormatter,\n      apiRef,\n      shouldAppendQuotes: options.shouldAppendQuotes ?? true\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from '../density';\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPageCountSelector, gridPaginationModelSelector } from './gridPaginationSelector';\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from './gridPaginationUtils';\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const pageCount = getPageCount(rowCount, pageSize);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import * as React from 'react';\nimport { useFirstRender } from '../../utils/useFirstRender';\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { defaultMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from '../../utils/useLazyRef';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { GridPreferencePanelsValue } from '../preferencesPanel/gridPreferencePanelsValue';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { gridFilterModelSelector } from './gridFilterSelector';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { gridRowsLookupSelector } from '../rows';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from './gridFilterUtils';\nimport { isDeepEqual } from '../../../utils/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return defaultMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n      const filteringResult = apiRef.current.applyStrategyProcessor('filtering', {\n        isRowMatchingFilters,\n        filterModel: filterModel ?? getDefaultGridFilterModel()\n      });\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filteringResult)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef, props.filterMode, props.disableEval]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.className.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusColumnGroupHeaderSelector } from '../focus';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nfunction enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nconst getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nconst getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  direction\n}) => {\n  if (direction === 'rtl') {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (direction === 'ltr') {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const theme = useTheme();\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {number} rowIndex index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === rowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setCellFocus(rowId, field);\n  }, [apiRef, logger]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, theme.direction, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction: theme.direction\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, theme.direction, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const direction = theme.direction;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1));\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            direction\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), direction === 'rtl' ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef &&\n          // `GRID_TREE_DATA_GROUPING_FIELD` from the Pro package\n          colDef.field === '__tree_data_group__') {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, theme.direction, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from './gridPaginationUtils';\nimport { useGridPaginationModel } from './useGridPaginationModel';\nimport { useGridRowCount } from './useGridRowCount';\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPreferencePanelStateSelector } from './gridPreferencePanelSelector';\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridCellModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from '../../../models/params/gridEditCellParams';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', props.onCellEditStop);\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    let newValue = apiRef.current.getCellValue(id, field);\n    if (deleteValue) {\n      const fieldType = apiRef.current.getColumn(field).type;\n      switch (fieldType) {\n        case 'boolean':\n          newValue = false;\n          break;\n        case 'date':\n        case 'dateTime':\n        case 'number':\n          newValue = undefined;\n          break;\n        case 'singleSelect':\n          newValue = null;\n          break;\n        case 'string':\n        default:\n          newValue = '';\n          break;\n      }\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: false\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { GridEditModes, GridRowModes } from '../../../models/gridEditRowModel';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isPrintableKey, isPasteShortcut } from '../../../utils/keyboardUtils';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns/gridColumnsSelector';\nimport { buildWarning } from '../../../utils/warning';\nimport { gridRowsDataRowIdToIdLookupSelector } from '../rows/gridRowsSelector';\nimport { deepClone } from '../../../utils/utils';\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from '../../../models/params/gridRowParams';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nconst missingOnProcessRowUpdateErrorWarning = buildWarning(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: `event.which` is deprecated but this is a temporary workaround\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        newValue = deleteValue ? '' : initialValue;\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: false\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          missingOnProcessRowUpdateErrorWarning();\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row)).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(rowModesModel).forEach(([id, params]) => {\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector } from './gridRowsSelector';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridSortedRowIdsSelector } from '../sorting/gridSortingSelector';\nimport { gridFilteredRowsLookupSelector } from '../filter/gridFilterSelector';\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutoGeneratedRow, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel } from './gridRowsUtils';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutoGeneratedRow(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = [];\n    updates.forEach(update => {\n      const id = getRowIdFromRowModel(update, props.getRowId, 'A row was provided without id when calling updateRows():');\n      const rowNode = apiRef.current.getRowNode(id);\n      if (rowNode?.type === 'pinnedRow') {\n        // @ts-ignore because otherwise `release:build` doesn't work\n        const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n        const prevModel = pinnedRowsCache.idLookup[id];\n        if (prevModel) {\n          pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n        }\n      } else {\n        nonPinnedRowsUpdates.push(update);\n      }\n    });\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      return;\n    }\n    logger.debug(`Updating all rows, new length ${props.rows.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from '../../core/strategyProcessing';\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from './gridRowsUtils';\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from './gridRowSelectionSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../pagination';\nimport { gridFocusCellSelector } from '../focus/gridFocusStateSelector';\nimport { gridExpandedSortedRowIdsSelector, gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from '../../../colDef';\nimport { GridCellModes } from '../../../models/gridEditRowModel';\nimport { isKeyboardEvent, isNavigationKey } from '../../../utils/keyboardUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../../../constants/gridDetailPanelToggleField';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { isEventTargetInPortal } from '../../../utils/domUtils';\nimport { isMultipleRowSelectionEnabled } from './utils';\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  };\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      apiRef.current.setRowSelectionModel(isSelected ? [id] : []);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = selection.filter(el => el !== id);\n      if (isSelected) {\n        newSelection.push(id);\n      }\n      const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      newSelection = isSelected ? selectableIds : [];\n    } else {\n      // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n      const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          selectionLookup[id] = id;\n        } else {\n          delete selectionLookup[id];\n        }\n      });\n      newSelection = Object.values(selectionLookup);\n    }\n    const isSelectionValid = newSelection.length < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(newSelection);\n    }\n  }, [apiRef, logger, canHaveMultipleSelection]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback(() => {\n    if (props.keepNonExistentRowsSelected) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (!rowsLookup[id]) {\n        delete selectionLookup[id];\n        hasChanged = true;\n      }\n    });\n    if (hasChanged) {\n      apiRef.current.setRowSelectionModel(Object.values(selectionLookup));\n    }\n  }, [apiRef, props.keepNonExistentRowsSelected]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const shouldLimitSelectionToCurrentPage = props.checkboxSelectionVisibleOnly && props.pagination;\n    const rowsToBeSelected = shouldLimitSelectionToCurrentPage ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    const filterModel = gridFilterModelSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value, filterModel?.items.length > 0);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (event.key === 'a' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from './gridSortingSelector';\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from '../rows';\nimport { useFirstRender } from '../../utils/useFirstRender';\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from '../../core/strategyProcessing';\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from './gridSortingUtils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getTreeNodeDescendants } from '../rows/gridRowsUtils';\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridPageSelector, gridPageSizeSelector } from '../pagination/gridPaginationSelector';\nimport { gridRowCountSelector } from '../rows/gridRowsSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridExpandedSortedRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridDimensionsSelector } from '../dimensions';\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    clientHeight,\n    scrollTop,\n    offsetHeight,\n    offsetTop\n  } = dimensions;\n  const elementBottom = offsetTop + offsetHeight;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (offsetHeight > clientHeight) {\n    return offsetTop;\n  }\n  if (elementBottom - clientHeight > scrollTop) {\n    return elementBottom - clientHeight;\n  }\n  if (offsetTop < scrollTop) {\n    return offsetTop;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.width,\n        scrollTop: Math.abs(virtualScrollerRef.current.scrollLeft),\n        offsetHeight: cellWidth,\n        offsetTop: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        clientHeight: dimensions.viewportInnerSize.height,\n        scrollTop: virtualScrollerRef.current.scrollTop,\n        offsetHeight: targetOffsetHeight,\n        offsetTop: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = theme.direction === 'rtl' ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, theme.direction, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { throttle } from '../../../utils/throttle';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { gridDimensionsSelector } from './gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../density';\nimport { gridRenderContextSelector } from '../virtualization';\nimport { useGridSelector } from '../../utils';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { calculatePinnedRowsHeight } from '../rows/gridRowsUtils';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props.columnHeaderHeight);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const height = parseFloat(computedStyle.height) || 0;\n    const width = parseFloat(computedStyle.width) || 0;\n    const hasHeightChanged = height !== previousSize.current?.height;\n    const hasWidthChanged = width !== previousSize.current?.width;\n    if (!previousSize.current || hasHeightChanged || hasWidthChanged) {\n      const size = {\n        width,\n        height\n      };\n      apiRef.current.publishEvent('resize', size);\n      previousSize.current = size;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (newDimensions.viewportInnerSize.width !== prevDimensions.viewportInnerSize.width || newDimensions.viewportInnerSize.height !== prevDimensions.viewportInnerSize.height) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  const dimensions = apiRef.current.state.dimensions;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensions.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n    set('--height', `${dimensions.rowHeight}px`);\n  }, [root, dimensions]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the data grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridFilterModelSelector } from '../filter/gridFilterSelector';\nimport { gridPaginationSelector } from '../pagination/gridPaginationSelector';\nimport { gridSortModelSelector } from '../sorting/gridSortingSelector';\nimport { useGridRegisterPipeApplier } from '../../core/pipeProcessing';\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from '../../../DataGrid/useDataGridProps';\n\n// TODO: I think the row heights can now be encoded as a single `size` instead of `sizes.baseXxxx`\n\nexport const rowsMetaStateInitializer = state => _extends({}, state, {\n  rowsMeta: {\n    currentPageTotalHeight: 0,\n    positions: []\n  }\n});\nlet warnedOnceInvalidRowHeight = false;\nconst getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nconst rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nconst getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const rowsHeightLookup = React.useRef(Object.create(null));\n\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const calculateRowProcessedSizes = row => {\n      if (!rowsHeightLookup.current[row.id]) {\n        rowsHeightLookup.current[row.id] = {\n          sizes: {\n            baseCenter: rowHeight\n          },\n          isResized: false,\n          autoHeight: false,\n          needsFirstMeasurement: true // Assume all rows will need to be measured by default\n        };\n      }\n      const {\n        isResized,\n        needsFirstMeasurement,\n        sizes\n      } = rowsHeightLookup.current[row.id];\n      let baseRowHeight = typeof rowHeight === 'number' && rowHeight > 0 ? rowHeight : 52;\n      const existingBaseRowHeight = sizes.baseCenter;\n      if (isResized) {\n        // Do not recalculate resized row height and use the value from the lookup\n        baseRowHeight = existingBaseRowHeight;\n      } else if (getRowHeightProp) {\n        const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n          densityFactor\n        }));\n        if (rowHeightFromUser === 'auto') {\n          if (needsFirstMeasurement) {\n            const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n              densityFactor\n            })) : rowHeight;\n\n            // If the row was not measured yet use the estimated row height\n            baseRowHeight = estimatedRowHeight ?? rowHeight;\n          } else {\n            baseRowHeight = existingBaseRowHeight;\n          }\n          hasRowWithAutoHeight.current = true;\n          rowsHeightLookup.current[row.id].autoHeight = true;\n        } else {\n          // Default back to base rowHeight if getRowHeight returns invalid value.\n          baseRowHeight = getValidRowHeight(rowHeightFromUser, rowHeight, getRowHeightWarning);\n          rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n          rowsHeightLookup.current[row.id].autoHeight = false;\n        }\n      } else {\n        rowsHeightLookup.current[row.id].needsFirstMeasurement = false;\n      }\n      const initialHeights = {\n        baseCenter: baseRowHeight\n      };\n      if (getRowSpacing) {\n        const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n        const spacing = getRowSpacing(_extends({}, row, {\n          isFirstVisible: indexRelativeToCurrentPage === 0,\n          isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n          indexRelativeToCurrentPage\n        }));\n        initialHeights.spacingTop = spacing.top ?? 0;\n        initialHeights.spacingBottom = spacing.bottom ?? 0;\n      }\n      const processedSizes = apiRef.current.unstable_applyPipeProcessors('rowHeight', initialHeights, row);\n      rowsHeightLookup.current[row.id].sizes = processedSizes;\n      return processedSizes;\n    };\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      let otherSizes = 0;\n      const processedSizes = calculateRowProcessedSizes(row);\n      /* eslint-disable-next-line no-restricted-syntax, guard-for-in */\n      for (const key in processedSizes) {\n        const value = processedSizes[key];\n        if (key !== 'baseCenter') {\n          otherSizes += value;\n        }\n      }\n      return acc + processedSizes.baseCenter + otherSizes;\n    }, 0);\n    pinnedRows?.top?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    pinnedRows?.bottom?.forEach(row => {\n      calculateRowProcessedSizes(row);\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.forceUpdate();\n  }, [apiRef, currentPage.rows, rowHeight, getRowHeightProp, getRowSpacing, getEstimatedRowHeight, pinnedRows, densityFactor]);\n  const getRowHeight = React.useCallback(rowId => {\n    const height = rowsHeightLookup.current[rowId];\n    return height ? height.sizes.baseCenter : rowHeight;\n  }, [rowHeight]);\n  const getRowInternalSizes = rowId => rowsHeightLookup.current[rowId]?.sizes;\n  const setRowHeight = React.useCallback((id, height) => {\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    rowsHeightLookup.current[id].isResized = true;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const debouncedHydrateRowsMeta = React.useMemo(() => debounce(hydrateRowsMeta, props.rowPositionsDebounceMs), [hydrateRowsMeta, props.rowPositionsDebounceMs]);\n  const storeMeasuredRowHeight = React.useCallback((id, height) => {\n    if (!rowsHeightLookup.current[id] || !rowsHeightLookup.current[id].autoHeight) {\n      return;\n    }\n\n    // Only trigger hydration if the value is different, otherwise we trigger a loop\n    const needsHydration = rowsHeightLookup.current[id].sizes.baseCenter !== height;\n    rowsHeightLookup.current[id].needsFirstMeasurement = false;\n    rowsHeightLookup.current[id].sizes.baseCenter = height;\n    if (needsHydration) {\n      debouncedHydrateRowsMeta();\n    }\n  }, [debouncedHydrateRowsMeta]);\n  const rowHasAutoHeight = React.useCallback(id => {\n    return rowsHeightLookup.current[id]?.autoHeight || false;\n  }, []);\n  const getLastMeasuredRowIndex = React.useCallback(() => {\n    return lastMeasuredRowIndex.current;\n  }, []);\n  const setLastMeasuredRowIndex = React.useCallback(index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  }, []);\n  const resetRowHeights = React.useCallback(() => {\n    rowsHeightLookup.current = {};\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [rowHeight, filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n  const rowsMetaApi = {\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_getRowHeight: getRowHeight,\n    unstable_getRowInternalSizes: getRowInternalSizes,\n    unstable_setRowHeight: setRowHeight,\n    unstable_storeRowHeightMeasurement: storeMeasuredRowHeight,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    getLastMeasuredRowIndex,\n    rowHasAutoHeight\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  const handleColumnReorderChange = React.useCallback(() => {\n    // `colSpan` needs to be recalculated after column reordering\n    lookup.current = {};\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnOrderChange', handleColumnReorderChange);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","import { isLeaf } from '../../../models/gridColumnGrouping';\nimport { isDeepEqual } from '../../../utils/utils';\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from '../../../models/gridColumnGrouping';\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from './gridColumnGroupsSelector';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from './gridColumnGroupsUtils';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from '../columns';\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useTheme } from '@mui/material/styles';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol } from '../../../utils/domUtils';\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from './gridColumnResizeApi';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from '../../utils';\nimport { gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { createControllablePromise } from '../../../utils/createControllablePromise';\nimport { clamp } from '../../../utils/utils';\nimport { useTimeout } from '../../utils/useTimeout';\nimport { GridPinnedColumnPosition } from '../columns/gridColumnsInterfaces';\nimport { gridColumnsStateSelector } from '../columns';\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone = false;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, direction) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (direction === 'rtl') {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const theme = useTheme();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const colDefRef = React.useRef();\n  const previousMouseClickEvent = React.useRef();\n  const columnHeaderElementRef = React.useRef();\n  const headerFilterElementRef = React.useRef();\n  const groupHeaderElementsRef = React.useRef([]);\n  const cellElementsRef = React.useRef([]);\n  const leftPinnedCellsAfterRef = React.useRef([]);\n  const rightPinnedCellsBeforeRef = React.useRef([]);\n  const fillerLeftRef = React.useRef();\n  const fillerRightRef = React.useRef();\n  const leftPinnedHeadersAfterRef = React.useRef([]);\n  const rightPinnedHeadersBeforeRef = React.useRef([]);\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${colDefRef.current.field}`);\n    const prevWidth = columnHeaderElementRef.current.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    colDefRef.current.computedWidth = newWidth;\n    colDefRef.current.width = newWidth;\n    colDefRef.current.flex = 0;\n    columnHeaderElementRef.current.style.width = `${newWidth}px`;\n    columnHeaderElementRef.current.style.minWidth = `${newWidth}px`;\n    columnHeaderElementRef.current.style.maxWidth = `${newWidth}px`;\n    const headerFilterElement = headerFilterElementRef.current;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n      headerFilterElement.style.minWidth = `${newWidth}px`;\n      headerFilterElement.style.maxWidth = `${newWidth}px`;\n    }\n    groupHeaderElementsRef.current.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n      div.style.minWidth = finalWidth;\n      div.style.maxWidth = finalWidth;\n    });\n    cellElementsRef.current.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, colDefRef.current.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(fillerLeftRef.current, 'width', widthDiff);\n      leftPinnedCellsAfterRef.current.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      leftPinnedHeadersAfterRef.current.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(fillerRightRef.current, 'width', widthDiff);\n      rightPinnedCellsBeforeRef.current.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      rightPinnedHeadersBeforeRef.current.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (previousMouseClickEvent.current) {\n      const prevEvent = previousMouseClickEvent.current;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        previousMouseClickEvent.current = undefined;\n        return;\n      }\n    }\n    if (colDefRef.current) {\n      apiRef.current.setColumnWidth(colDefRef.current.field, colDefRef.current.width);\n      logger.debug(`Updating col ${colDefRef.current.field} with new width: ${colDefRef.current.width}`);\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    colDefRef.current = colDef;\n    columnHeaderElementRef.current = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${colDef.field}\"]`);\n    if (headerFilterElement) {\n      headerFilterElementRef.current = headerFilterElement;\n    }\n    groupHeaderElementsRef.current = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    cellElementsRef.current = findGridCellElementsFromCol(columnHeaderElementRef.current, apiRef.current);\n    fillerLeftRef.current = findGridElement(apiRef.current, 'filler--pinnedLeft');\n    fillerRightRef.current = findGridElement(apiRef.current, 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, colDefRef.current.field);\n    leftPinnedCellsAfterRef.current = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, columnHeaderElementRef.current);\n    rightPinnedCellsBeforeRef.current = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, columnHeaderElementRef.current);\n    leftPinnedHeadersAfterRef.current = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, columnHeaderElementRef.current);\n    rightPinnedHeadersBeforeRef.current = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, columnHeaderElementRef.current);\n    resizeDirection.current = getResizeDirection(separator, theme.direction);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, columnHeaderElementRef.current.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, columnHeaderElementRef.current.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, colDefRef.current.minWidth, colDefRef.current.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: columnHeaderElementRef.current,\n      colDef: colDefRef.current,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, columnHeaderElementRef.current.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, colDefRef.current.minWidth, colDefRef.current.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: columnHeaderElementRef.current,\n      colDef: colDefRef.current,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      event.preventDefault();\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (columnHeaderElementRef.current) {\n      columnHeaderElementRef.current.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, columnHeaderElementRef, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    previousMouseClickEvent.current = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: doesSupportTouchActionNone()\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","import { useGridInitialization } from '../hooks/core/useGridInitialization';\nimport { useGridInitializeState } from '../hooks/utils/useGridInitializeState';\nimport { useGridClipboard } from '../hooks/features/clipboard/useGridClipboard';\nimport { columnMenuStateInitializer, useGridColumnMenu } from '../hooks/features/columnMenu/useGridColumnMenu';\nimport { useGridColumns, columnsStateInitializer } from '../hooks/features/columns/useGridColumns';\nimport { densityStateInitializer, useGridDensity } from '../hooks/features/density/useGridDensity';\nimport { useGridCsvExport } from '../hooks/features/export/useGridCsvExport';\nimport { useGridPrintExport } from '../hooks/features/export/useGridPrintExport';\nimport { useGridFilter, filterStateInitializer } from '../hooks/features/filter/useGridFilter';\nimport { focusStateInitializer, useGridFocus } from '../hooks/features/focus/useGridFocus';\nimport { useGridKeyboardNavigation } from '../hooks/features/keyboardNavigation/useGridKeyboardNavigation';\nimport { useGridPagination, paginationStateInitializer } from '../hooks/features/pagination/useGridPagination';\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from '../hooks/features/preferencesPanel/useGridPreferencesPanel';\nimport { useGridEditing, editingStateInitializer } from '../hooks/features/editing/useGridEditing';\nimport { useGridRows, rowsStateInitializer } from '../hooks/features/rows/useGridRows';\nimport { useGridRowsPreProcessors } from '../hooks/features/rows/useGridRowsPreProcessors';\nimport { useGridParamsApi } from '../hooks/features/rows/useGridParamsApi';\nimport { rowSelectionStateInitializer, useGridRowSelection } from '../hooks/features/rowSelection/useGridRowSelection';\nimport { useGridRowSelectionPreProcessors } from '../hooks/features/rowSelection/useGridRowSelectionPreProcessors';\nimport { useGridSorting, sortingStateInitializer } from '../hooks/features/sorting/useGridSorting';\nimport { useGridScroll } from '../hooks/features/scroll/useGridScroll';\nimport { useGridEvents } from '../hooks/features/events/useGridEvents';\nimport { dimensionsStateInitializer, useGridDimensions } from '../hooks/features/dimensions/useGridDimensions';\nimport { rowsMetaStateInitializer, useGridRowsMeta } from '../hooks/features/rows/useGridRowsMeta';\nimport { useGridStatePersistence } from '../hooks/features/statePersistence/useGridStatePersistence';\nimport { useGridColumnSpanning } from '../hooks/features/columns/useGridColumnSpanning';\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from '../hooks/features/columnGrouping/useGridColumnGrouping';\nimport { useGridVirtualization, virtualizationStateInitializer } from '../hooks/features/virtualization';\nimport { columnResizeStateInitializer, useGridColumnResize } from '../hooks/features/columnResize/useGridColumnResize';\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridParamsApi(apiRef);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  return apiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { getDataGridUtilityClass } from '../../../constants';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from '../../../colDef';\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilteredTopLevelRowCountSelector } from '../filter';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from '../../utils';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { gridPaginationRowCountSelector } from './gridPaginationSelector';\nimport { noRowCountInServerMode } from './gridPaginationUtils';\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCount === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCount]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.paginationMode === 'server' && props.rowCount == null) {\n        noRowCountInServerMode();\n      }\n    }\n  }, [props.rowCount, props.paginationMode]);\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, props.paginationMode, props.rowCount]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { gridExpandedRowCountSelector } from '../filter/gridFilterSelector';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../columns/gridColumnsSelector';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { defaultGetRowsToExport, getColumnsToExport } from './utils';\nimport { getDerivedPaginationModel } from '../pagination/useGridPaginationModel';\nimport { useGridRegisterPipeProcessor } from '../../core/pipeProcessing';\nimport { GridPrintExportMenuItem } from '../../../components/toolbar/GridToolbarExport';\nimport { getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../colDef/gridCheckboxSelectionColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.map(id => apiRef.current.getRow(id));\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props.columnHeaderHeight) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n\n    // the footer is always being placed at the bottom of the page as if all rows are exported\n    // so if getRowsToExport is being used to only export a subset of rows then we need to\n    // adjust the footer position to be correctly placed at the bottom of the grid\n    const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n    gridFooterElement.style.position = 'absolute';\n    gridFooterElement.style.width = '100%';\n    gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props.columnHeaderHeight]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.unstable_setVirtualization(true);\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows();\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n      apiRef.current.forceUpdate();\n    }\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    apiRef.current.unstable_setVirtualization(false);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","import { useGridApiOptionHandler } from '../../utils/useGridApiEventHandler';\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from '../../utils';\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from '../components';\nimport { GridContextProvider } from '../context/GridContextProvider';\nimport { useDataGridComponent } from './useDataGridComponent';\nimport { useDataGridProps } from './useDataGridProps';\nimport { propValidatorsDataGrid, validateProps } from '../internals/utils/propValidation';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propValidators = [...propValidatorsDataGrid,\n// Only validate in MIT version\nprops => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  validateProps(props, propValidators);\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follow the number of rows in the Data Grid.\n   * @default false\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the cell is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a  loading overlay is displayed.\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, the vertical borders of the cells are displayed.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, the right border of the column headers are displayed.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n};","import { isNumber } from '../../utils/utils';\nimport { GridSignature } from '../../hooks/utils/useGridApiEventHandler';\nexport const propValidatorsDataGrid = [props => props.autoPageSize && props.autoHeight && ['MUI X: `<DataGrid autoPageSize={true} autoHeight={true} />` are not valid props.', 'You cannot use both the `autoPageSize` and `autoHeight` props at the same time because `autoHeight` scales the height of the Data Grid according to the `pageSize`.', '', 'Please remove one of these two props.'].join('\\n') || undefined, props => props.signature === GridSignature.DataGrid && props.paginationMode === 'client' && isNumber(props.rowCount) && 'MUI X: Usage of the `rowCount` prop with client side pagination (`paginationMode=\"client\"`) has no effect. `rowCount` is only meant to be used with `paginationMode=\"server\"`.' || undefined];\nconst warnedOnceCache = new Set();\nconst warnOnce = message => {\n  if (!warnedOnceCache.has(message)) {\n    console.error(message);\n    warnedOnceCache.add(message);\n  }\n};\nexport const validateProps = (props, validators) => {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  validators.forEach(validator => {\n    const warning = validator(props);\n    if (warning) {\n      warnOnce(warning);\n    }\n  });\n};\nexport const clearWarningsCache = () => {\n  warnedOnceCache.clear();\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from './icons/GridColumnUnsortedIcon';\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from './icons';\nimport MUISelectOption from './components/MUISelectOption';\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseCheckbox: MUICheckbox,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement } from '../components';\nimport { GridCell } from '../components/cell/GridCell';\nimport { GridColumnHeaders } from '../components/GridColumnHeaders';\nimport { GridColumnMenu } from '../components/menu/columnMenu/GridColumnMenu';\nimport { GridDetailPanels } from '../components/GridDetailPanels';\nimport { GridPinnedRows } from '../components/GridPinnedRows';\nimport { GridNoResultsOverlay } from '../components/GridNoResultsOverlay';\nimport materialSlots from '../material';\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from '../constants';\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from '../constants/defaultGridSlotsComponents';\nimport { GridEditModes } from '../models';\nimport { computeSlots, useProps } from '../internals/utils';\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid'\n};\n\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  columnBufferPx: 150,\n  rowBufferPx: 150,\n  rows: [],\n  rowSelection: true,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnSelector: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleRowSelection: false,\n  disableColumnSorting: false,\n  disableMultipleColumnsSorting: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterMode: 'client',\n  filterDebounceMs: 150,\n  columnHeaderHeight: 56,\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pagination: false,\n  paginationMode: 'client',\n  rowHeight: 52,\n  resizeThrottleMs: 60,\n  pageSizeOptions: [25, 50, 100],\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingOrder: ['asc', 'desc', null],\n  sortingMode: 'client',\n  throttleRowsMs: 0,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  keepNonExistentRowsSelected: false,\n  keepColumnPositionIfDraggedOutside: false,\n  ignoreValueFormatterDuringExport: false,\n  clipboardCopyCellDelimiter: '\\t',\n  rowPositionsDebounceMs: 166,\n  autosizeOnMount: false,\n  disableAutosize: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  return React.useMemo(() => _extends({}, DATA_GRID_PROPS_DEFAULT_VALUES, themedProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots]);\n};","import _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => {\n    const themedProps = _extends({}, (_objectDestructuringEmpty(allProps), allProps));\n    return groupForwardedProps(themedProps);\n  }, [allProps]);\n}","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderActionsCell } from '../components/cell/GridActionsCell';\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderBooleanCell } from '../components/cell/GridBooleanCell';\nimport { renderEditBooleanCell } from '../components/cell/GridEditBooleanCell';\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridBooleanOperators } from './gridBooleanOperators';\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","import { GridFilterInputBoolean } from '../components/panel/filterPanel/GridFilterInputBoolean';\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const valueAsBoolean = String(filterItem.value) === 'true';\n    return value => {\n      return Boolean(value) === valueAsBoolean;\n    };\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from '../components/columnSelection/GridCellCheckboxRenderer';\nimport { GridHeaderCheckbox } from '../components/columnSelection/GridHeaderCheckbox';\nimport { selectedIdsLookupSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridDateOperators } from './gridDateOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditDateCell } from '../components/cell/GridEditDateCell';\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { GridFilterInputDate } from '../components/panel/filterPanel/GridFilterInputDate';\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { GRID_NUMERIC_COL_DEF } from './gridNumericColDef';\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from './gridDateColDef';\nimport { GRID_BOOLEAN_COL_DEF } from './gridBooleanColDef';\nimport { GRID_SINGLE_SELECT_COL_DEF } from './gridSingleSelectColDef';\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from './gridActionsColDef';\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { isNumber } from '../utils/utils';\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from './gridNumericOperators';\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from './gridStringColDef';\nimport { renderEditSingleSelectCell } from '../components/cell/GridEditSingleSelectCell';\nimport { getGridSingleSelectOperators } from './gridSingleSelectOperators';\nimport { getValueOptions, isSingleSelectColDef } from '../components/panel/filterPanel/filterPanelUtils';\nimport { isObject } from '../utils/utils';\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import { GridFilterInputSingleSelect } from '../components/panel/filterPanel/GridFilterInputSingleSelect';\nimport { GridFilterInputMultipleSingleSelect } from '../components/panel/filterPanel/GridFilterInputMultipleSingleSelect';\nimport { isObject } from '../utils/utils';\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import { renderEditInputCell } from '../components/cell/GridEditInputCell';\nimport { gridStringOrNumberComparator } from '../hooks/features/sorting/gridSortingUtils';\nimport { getGridStringOperators, getGridStringQuickFilterFn } from './gridStringOperators';\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from '../components/panel/filterPanel/GridFilterInputValue';\nimport { escapeRegExp } from '../utils/utils';\nimport { GridFilterInputMultipleValue } from '../components/panel/filterPanel/GridFilterInputMultipleValue';\nimport { removeDiacritics } from '../hooks/features/filter/gridFilterUtils';\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(escapeRegExp(filterItemValue), 'i');\n    return value => {\n      return value != null ? filterRegex.test(String(value)) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => {\n      return value != null ? collator.compare(filterItemValue, value.toString()) === 0 : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value === '' || value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value !== '' && value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridColumnGroupsLookupSelector } from '../../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: true,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled, useTheme } from '@mui/material/styles';\nimport { useGridSelector } from '../../utils';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { gridDimensionsSelector } from '../dimensions';\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from '../virtualization';\nimport { computeOffsetLeft } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from '../columns';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from '../../../components/GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../../../internals/utils/getPinnedCellOffset';\nimport { GridColumnHeaderSeparatorSides } from '../../../components/columnHeaders/GridColumnHeaderSeparator';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex',\n  height: 'var(--DataGrid-headerHeight)'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const theme = useTheme();\n  const rootProps = useGridRootProps();\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, theme.direction, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      // TODO: `minFirstColumn` is not used anymore, could be refactored out.\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = !hasVirtualization ? 0 : currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderTop = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderTop && gridClasses['filler--borderTop'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        borderTop: borderTop,\n        pinnedRight: isPinnedRight\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    if (pinnedPosition === 'left' || pinnedPosition === 'right') {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      if (pinnedPosition === 'left') {\n        style = {\n          left: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          right: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        minFirstColumn: leftRenderContext.firstColumnIndex,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        minFirstColumn: pinnedColumns.left.length,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        minFirstColumn: rightRenderContext.firstColumnIndex,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = apiRef.current.getColumnGroupPath(firstColumnFieldToRender)[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = apiRef.current.getColumnGroupPath(lastColumnFieldToRender)[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = apiRef.current.getColumn(field);\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.headerHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push( /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            minFirstColumn: leftRenderContext.firstColumnIndex,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            minFirstColumn: rightRenderContext.firstColumnIndex,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridColumnHeaders } from '../hooks/features/columnHeaders/useGridColumnHeaders';\nimport { GridBaseColumnHeaders } from './columnHeaders/GridBaseColumnHeaders';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { gridFilteredTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel = /*#__PURE__*/React.forwardRef(function GridPreferencesPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    ref: ref,\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, props, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { GridPreferencesPanel } from './panel/GridPreferencesPanel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: /*#__PURE__*/_jsx(CircularProgress, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridOverlay } from './containers/GridOverlay';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector } from '../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const lastPage = React.useMemo(() => {\n    const calculatedValue = Math.ceil(rowCount / (paginationModel.pageSize || 1)) - 1;\n    return Math.max(0, calculatedValue);\n  }, [rowCount, paginationModel.pageSize]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not preset in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: paginationModel.page <= lastPage ? paginationModel.page : lastPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, apiRef.current.getLocaleText('MuiTablePagination'), props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from '../models/gridEditRowModel';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass, gridClasses } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnPositionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector, objectShallowCompare } from '../hooks/utils/useGridSelector';\nimport { useGridVisibleRows } from '../hooks/utils/useGridVisibleRows';\nimport { findParentElementFromClassName, isEventTargetInPortal } from '../utils/domUtils';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from '../colDef/gridCheckboxSelectionColDef';\nimport { GRID_ACTIONS_COLUMN_TYPE } from '../colDef/gridActionsColDef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from '../constants/gridDetailPanelToggleField';\nimport { gridSortModelSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridRowMaximumTreeDepthSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridEditRowsStateSelector } from '../hooks/features/editing/gridEditingSelectors';\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from './cell/GridCell';\nimport { GridScrollbarFillerCell as ScrollbarFiller } from './GridScrollbarFillerCell';\nimport { getPinnedCellOffset } from '../internals/utils/getPinnedCellOffset';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    editable,\n    editing,\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    rowHeight,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', rowHeight === 'auto' && 'row--dynamicHeight']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n\n  const ownerState = {\n    selected,\n    isFirstVisible,\n    isLastVisible,\n    classes: rootProps.classes,\n    editing: apiRef.current.getRowMode(rowId) === GridRowModes.Edit,\n    editable: rootProps.editMode === GridEditModes.Row,\n    rowHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (rowHeight === 'auto' && ref.current && typeof ResizeObserver === 'undefined') {\n      // Fallback for IE\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, ref.current.clientHeight);\n    }\n  }, [apiRef, rowHeight, rowId]);\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      // The index prop is relative to the rows from all pages. As example, the index prop of the\n      // first row is 5 if `paginationModel.pageSize=5` and `paginationModel.page=1`. However, the index used by the virtualization\n      // doesn't care about pagination and considers the rows from the current page only, so the\n      // first row always has index=0. We need to subtract the index of the first row to make it\n      // compatible with the index used by the virtualization.\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // pinned rows are not part of the visible rows\n      if (rowIndex != null) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    const rootElement = ref.current;\n    const hasFixedHeight = rowHeight !== 'auto';\n    if (!rootElement || hasFixedHeight || typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      const [entry] = entries;\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    });\n    resizeObserver.observe(rootElement);\n    return () => resizeObserver.disconnect();\n  }, [apiRef, currentPage.range, index, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const sizes = useGridSelector(apiRef, () => _extends({}, apiRef.current.unstable_getRowInternalSizes(rowId)), objectShallowCompare);\n  let minHeight = rowHeight;\n  if (minHeight === 'auto' && sizes) {\n    const numberOfBaseSizes = 1;\n    const maximumSize = sizes.baseCenter ?? 0;\n    if (maximumSize > 0 && numberOfBaseSizes > 1) {\n      minHeight = maximumSize;\n    }\n  }\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (sizes?.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = sizes.spacingTop;\n    }\n    if (sizes?.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += sizes.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, minHeight, sizes, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align ?? 'left'\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    \"aria-rowindex\": ariaRowIndex,\n    \"aria-selected\": selected,\n    style: style\n  }, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from '../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../constants/gridClasses';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport clsx from 'clsx';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridExpandedRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector, gridRowsLoadingSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridVisibleRows } from '../../hooks/utils/useGridVisibleRows';\nimport { getMinimalContentHeight } from '../../hooks/features/rows/gridRowsUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType\n}) => ({\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n}));\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.headersTotalHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, {\n    className: clsx(classes.root),\n    overlayType: props.overlayType,\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  overlayType: PropTypes.string.isRequired\n} : void 0;\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && totalRowCount === 0;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n  let overlayType = '';\n  if (showNoRowsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noRowsOverlay, _extends({}, rootProps.slotProps?.noRowsOverlay));\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.noResultsOverlay, _extends({}, rootProps.slotProps?.noResultsOverlay));\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlay = /*#__PURE__*/_jsx(rootProps.slots.loadingOverlay, _extends({}, rootProps.slotProps?.loadingOverlay));\n    overlayType = 'loadingOverlay';\n  }\n  if (overlay === null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    overlayType: overlayType,\n    children: overlay\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useTheme } from '@mui/material/styles';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const theme = useTheme();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = theme.direction === 'rtl' ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isAutoGeneratedRow } from '../../hooks/features/rows/gridRowsUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== '__row_group_by_columns_group__' && isAutoGeneratedRow(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { doesSupportPreventScroll } from '../../utils/doesSupportPreventScroll';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { GridCellModes } from '../../models';\nimport { useGridSelector, objectShallowCompare } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { MissingRowIdError } from '../../hooks/features/rows/useGridParamsApi';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { GridPinnedColumnPosition } from '../../hooks/features/columns/gridColumnsInterfaces';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const field = column.field;\n  const cellParamsWithAPI = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const cellParams = apiRef.current.getCellParams(rowId, field);\n      const result = cellParams;\n      result.api = apiRef.current;\n      return result;\n    } catch (e) {\n      if (e instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw e;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value,\n    formattedValue\n  } = cellParamsWithAPI;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParamsWithAPI.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParamsWithAPI) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParamsWithAPI));\n  }\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    if (pinnedPosition === PinnedPosition.LEFT) {\n      cellStyle.left = pinnedOffset;\n    }\n    if (pinnedPosition === PinnedPosition.RIGHT) {\n      cellStyle.right = pinnedOffset;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (cellParamsWithAPI === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParamsWithAPI);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const params = _extends({}, cellParamsWithAPI, {\n      row: updatedRow\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if ( /*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(className, classNames, classes.root),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from '../../models/params/gridEditCellParams';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridEditModes } from '../../models/gridEditRowModel';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from '../panel/filterPanel/filterPanelUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || isEscapeKey(event.key)) {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: isEscapeKey(event.key) ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"align\", \"width\", \"height\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { randomNumberBetween } from '../../utils/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst randomWidth = randomNumberBetween(10000, 20, 80);\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${capitalize(align)}`, 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridSkeletonCell(props) {\n  const {\n      align,\n      width,\n      height\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align\n  };\n  const classes = useUtilityClasses(ownerState);\n  const contentWidth = Math.round(randomWidth());\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: classes.root,\n    style: {\n      height,\n      maxWidth: width,\n      minWidth: width\n    }\n  }, other, {\n    children: /*#__PURE__*/_jsx(Skeleton, {\n      width: `${contentWidth}%`,\n      height: 25\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string.isRequired,\n  field: PropTypes.string.isRequired,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridSelector } from '../../hooks';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(Badge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderSortIcon } from './GridColumnHeaderSortIcon';\nimport { ColumnHeaderMenuIcon } from './ColumnHeaderMenuIcon';\nimport { GridColumnHeaderMenu } from '../menu/columnMenu/GridColumnHeaderMenu';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridGenericColumnHeaderItem } from './GridGenericColumnHeaderItem';\nimport { isEventTargetInPortal } from '../../utils/domUtils';\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from '../../utils/cellBorderUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(GridColumnHeaderSortIcon, {\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    })]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: headerClassName,\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height,\n        opacity: rootProps.showColumnVerticalBorder ? 1 : 0\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport Badge from '@mui/material/Badge';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { GridIconButtonContainer } from './GridIconButtonContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n    direction,\n    index,\n    sortingOrder,\n    disabled\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(Badge, {\n      badgeContent: index,\n      color: \"default\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { isOverflown } from '../../utils/domUtils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { GridColumnHeaderTitle } from './GridColumnHeaderTitle';\nimport { GridColumnHeaderSeparator } from './GridColumnHeaderSeparator';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      columnMenuOpen,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width,\n      minWidth: width,\n      maxWidth: width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort,\n    \"aria-label\": headerComponent == null ? label : undefined\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      value: isChecked,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { isMultipleRowSelectionEnabled } from '../../hooks/features/rowSelection/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridTabIndexColumnHeaderSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { gridRowSelectionStateSelector } from '../../hooks/features/rowSelection/gridRowSelectionSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridExpandedSortedRowIdsSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from '../../hooks/features/pagination/gridPaginationSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: isChecked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useLazyRef } from '../../hooks/utils/useLazyRef';\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: \"Reset\"\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from '../../constants/gridClasses';\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeadersStyles = {\n  [`.${c.columnSeparator}, .${c['columnSeparator--resizing']}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  }\n};\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / calc(\n                ${t.vars.palette.action.selectedOpacity} + \n                ${t.vars.palette.action.hoverOpacity}\n              ))` : alpha(t.palette.primary.main, t.palette.action.selectedOpacity + t.palette.action.hoverOpacity);\n  const pinnedHoverBackground = t.vars ? hoverColor : blend(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedSelectedBackground = t.vars ? selectedBackground : blend(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedHoverBackground = t.vars ? hoverColor : blend(pinnedSelectedBackground, hoverColor, hoverOpacity);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    // The selector we really want here is `:first-child`, but emotion thinks it knows better than use what we\n    // want and prints a warning to the console if we use it, about :first-child being \"unsafe\" in an SSR context.\n    // https://github.com/emotion-js/emotion/issues/1105\n    // Using `:first-of-type instead` is ironically less \"safe\" because if all our elements aren't `div`, this style\n    // will fail to apply.\n    [`.${c.main} > *:first-of-type`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      lineHeight: null,\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} 1px`,\n      outlineWidth: 1,\n      outlineOffset: -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} 1px`\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      // to anchor the aggregation label\n      position: 'relative'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -6\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}, & .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -10\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      visibility: 'hidden',\n      position: 'absolute',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeaders}:hover`]: columnHeadersStyles,\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeaders}`]: columnHeadersStyles,\n      [`& .${c.columnHeader}`]: columnHeaderStyles\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: -12\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: -12\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      '&:hover': {\n        color: (t.vars || t).palette.text.primary,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          color: borderColor\n        }\n      },\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.text.primary\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit'\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -10,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      height: 'var(--height)',\n      minWidth: 'var(--width)',\n      maxWidth: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `solid ${(t.vars || t).palette.primary.main} 1px`,\n        outlineOffset: '-1px'\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedHoverBackground\n        }\n      },\n      [`&.Mui-selected`]: {\n        [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n          backgroundColor: pinnedSelectedBackground\n        },\n        '&:hover': {\n          [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n            backgroundColor: pinnedSelectedHoverBackground\n          }\n        }\n      }\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: 1\n    },\n    [`& .${c['filler--borderTop']}`]: {\n      borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { GridRootStyles } from './GridRootStyles';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensitySelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0\n});\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = _extends({}, rootProps, {\n    density\n  });\n  const classes = useUtilityClasses(ownerState);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    ownerState: ownerState\n  }, other, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(className, classes.root),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [Divider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from '../../../hooks/features/columnMenu/useGridColumnMenuSlots';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnMenuColumnsItem } from './menuItems/GridColumnMenuColumnsItem';\nimport { GridColumnMenuFilterItem } from './menuItems/GridColumnMenuFilterItem';\nimport { GridColumnMenuSortItem } from './menuItems/GridColumnMenuSortItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from './GridColumnMenuHideItem';\nimport { GridColumnMenuManageItem } from './GridColumnMenuManageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { gridVisibleColumnDefinitionsSelector } from '../../../../hooks/features/columns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from '../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from '../../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GridColumnsManagement } from '../columnsManagement';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { isEscapeKey } from '../../utils/keyboardUtils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (isEscapeKey(event.key)) {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: false\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(className, classes.panel),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(className, classes.root),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(className, classes.root),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../../constants/gridClasses';\nimport { getValueFromValueOptions, getValueOptions } from './filterPanelUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 120\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    if (rootProps.disableMultipleColumnsFiltering) {\n      if (item.value === undefined) {\n        deleteFilter(item);\n      } else {\n        // TODO v6: simplify the behavior by always remove the filter form\n        applyFilterChanges(_extends({}, item, {\n          value: undefined\n        }));\n      }\n    } else {\n      deleteFilter(item);\n    }\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: _extends({\n        display: hasLogicOperatorColumn ? 'flex' : 'none',\n        visibility: showMultiFilterOperators ? 'visible' : 'hidden'\n      }, baseFormControlProps.sx || {}, logicOperatorInputProps.sx || {}),\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(item.value || '');\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = event.target.value;\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(item.value || '');\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState,\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  // The date picker expects the date to be in the local timezone.\n  // But .toISOString() converts it to UTC with zero offset.\n  // So we need to subtract the timezone offset.\n  dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: getOptionLabel(option)\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value]\n    }));\n  }, [applyValue, item]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    })))),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from './filterPanelUtils';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from '../../../hooks/utils/useTimeout';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [id, applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from '../../../models/gridFilterItem';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridPanelContent } from '../GridPanelContent';\nimport { GridPanelFooter } from '../GridPanelFooter';\nimport { GridPanelWrapper } from '../GridPanelWrapper';\nimport { GridFilterForm } from './GridFilterForm';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridFilterModelSelector } from '../../../hooks/features/filter/gridFilterSelector';\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from '../../../hooks/features/columns/gridColumnsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridToolbarExportContainer } from './GridToolbarExportContainer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nexport function GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../utils/keyboardUtils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../menu/GridMenu';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = /*#__PURE__*/React.forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        ref: handleRef,\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, buttonProps, {\n        onClick: handleMenuOpen\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass, gridClasses } from '../constants';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { useGridApiEventHandler } from '../hooks/utils/useGridApiEventHandler';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridDimensionsSelector } from '../hooks/features/dimensions/gridDimensionsSelectors';\nimport { gridDensityFactorSelector } from '../hooks/features/density/densitySelector';\nimport { gridColumnsTotalWidthSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { useTimeout } from '../hooks/utils/useTimeout';\nimport { getTotalHeaderHeight } from '../hooks/features/columns/gridColumnsUtils';\nimport { fastMemo } from '../utils/fastMemo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridScrollAreaRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  scrollDirection: PropTypes.oneOf(['left', 'right']).isRequired\n} : void 0;\nconst GridScrollArea = fastMemo(GridScrollAreaRaw);\nexport { GridScrollArea };","import * as React from 'react';\nimport { fastMemo } from '../utils/fastMemo';\nimport { useGridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from '../hooks/features/columns/gridColumnsSelector';\nimport { gridFilterActiveItemsLookupSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { gridSortColumnLookupSelector } from '../hooks/features/sorting/gridSortingSelector';\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from '../hooks/features/focus/gridFocusStateSelector';\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from '../hooks/features/columnGrouping/gridColumnGroupsSelector';\nimport { gridColumnMenuSelector } from '../hooks/features/columnMenu/columnMenuSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = React.useRef(null);\n  apiRef.current.register('private', {\n    columnHeadersContainerRef: columnsContainerRef\n  });\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, {\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  });\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import { gridVisibleColumnDefinitionsSelector } from '../features/columns/gridColumnsSelector';\nimport { useGridSelector } from './useGridSelector';\nimport { useGridRootProps } from './useGridRootProps';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../features/columnGrouping/gridColumnGroupsSelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../features/rows/gridRowsSelector';\nimport { useGridPrivateApiContext } from './useGridPrivateApiContext';\nimport { isMultipleRowSelectionEnabled } from '../features/rowSelection/utils';\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  let role = 'grid';\n  if (rootProps.treeData) {\n    role = 'treegrid';\n  }\n  return {\n    role,\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridAriaAttributes } from '../../hooks/utils/useGridAriaAttributes';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const ariaAttributes = useGridAriaAttributes();\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: props.children\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0,\n  '&::after': {\n    content: '\" \"',\n    position: 'absolute',\n    zIndex: 5,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 1,\n    width: 'var(--DataGrid-rowWidth)',\n    backgroundColor: 'var(--DataGrid-rowBorderColor)'\n  }\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { gridClasses, getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, props.className, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '../../utils/fastMemo';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { gridClasses } from '../../constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--DataGrid-rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller() {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollbarHeight = hasScrollX ? scrollbarSize : 0;\n  const expandedHeight = viewportOuterSize.height - minimumSize.height - scrollbarHeight;\n  const height = Math.max(scrollbarHeight, expandedHeight);\n  if (height === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridRowsMetaSelector } from '../../hooks/features/rows';\nimport { gridRenderContextSelector } from '../../hooks/features/virtualization';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from '../../hooks/utils/useOnMount';\nimport { useGridPrivateApiContext } from '../../hooks/utils/useGridPrivateApiContext';\nimport { gridDimensionsSelector, useGridSelector } from '../../hooks';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '& > div': {\n    display: 'inline-block'\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst Content = styled('div')({\n  display: 'inline-block'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n    lastPosition.current = scroller[propertyScroll];\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    tabIndex: -1,\n    children: /*#__PURE__*/_jsx(Content, {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridScrollArea } from '../GridScrollArea';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDimensionsSelector } from '../../hooks/features/dimensions';\nimport { useGridVirtualScroller } from '../../hooks/features/virtualization/useGridVirtualScroller';\nimport { GridOverlays } from '../base/GridOverlays';\nimport { GridHeaders } from '../GridHeaders';\nimport { GridMainContainer as Container } from './GridMainContainer';\nimport { GridTopContainer as TopContainer } from './GridTopContainer';\nimport { GridBottomContainer as BottomContainer } from './GridBottomContainer';\nimport { GridVirtualScrollerContent as Content } from './GridVirtualScrollerContent';\nimport { GridVirtualScrollerFiller as SpaceFiller } from './GridVirtualScrollerFiller';\nimport { GridVirtualScrollerRenderZone as RenderZone } from './GridVirtualScrollerRenderZone';\nimport { GridVirtualScrollbar as Scrollbar } from './GridVirtualScrollbar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight'],\n    scroller: ['virtualScroller']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const classes = useUtilityClasses(rootProps, dimensions);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [/*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), rows.length > 0 && /*#__PURE__*/_jsx(SpaceFiller, {}), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderTop', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","// Can't import from pro package - hence duplication\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorEquals: 'equals',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import * as React from 'react';\nimport { GridApiContext } from '../components/GridApiContext';\nimport { GridPrivateApiContext } from '../hooks/utils/useGridPrivateApiContext';\nimport { GridRootPropsContext } from './GridRootPropsContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n      value: privateApiRef,\n      children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n        value: apiRef,\n        children: children\n      })\n    })\n  });\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","export const gridColumnMenuSelector = state => state.columnMenu;","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","/**\n * Get the theme state\n * @category Core\n */\nexport const gridThemeSelector = state => state.theme;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { EMPTY_PINNED_COLUMN_FIELDS } from './gridColumnsInterfaces';\nimport { gridThemeSelector } from '../../core/gridCoreSelector';\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridThemeSelector, (columnsState, model, visibleColumnFields, theme) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, theme.direction === 'rtl');\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from '../../../colDef';\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from './gridColumnsSelector';\nimport { clamp } from '../../../utils/utils';\nimport { gridDensityFactorSelector } from '../density/densitySelector';\nimport { gridHeaderFilteringEnabledSelector } from '../headerFiltering/gridHeaderFilteringSelectors';\nimport { gridColumnGroupsHeaderMaxDepthSelector } from '../columnGrouping/gridColumnGroupsSelector';\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, viewportInnerWidth) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute there minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    const newColumn = _extends({}, rawState.lookup[columnField]);\n    if (rawState.columnVisibilityModel[columnField] === false) {\n      newColumn.computedWidth = 0;\n    } else {\n      let computedWidth;\n      if (newColumn.flex && newColumn.flex > 0) {\n        totalFlexUnits += newColumn.flex;\n        computedWidth = 0;\n        flexColumns.push(newColumn);\n      } else {\n        computedWidth = clamp(newColumn.width || GRID_STRING_COL_DEF.width, newColumn.minWidth || GRID_STRING_COL_DEF.minWidth, newColumn.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n      newColumn.computedWidth = computedWidth;\n    }\n    columnsLookup[columnField] = newColumn;\n  });\n  const initialFreeSpace = Math.max(viewportInnerWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && viewportInnerWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = _extends({}, existingState, newColumn, {\n      hasBeenResized\n    });\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.().viewportInnerSize.width ?? 0);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, headerHeight) {\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const multiplicationFactor = isHeaderFilteringEnabled ? 2 : 1;\n  return Math.floor(headerHeight * densityFactor) * ((maxDepth ?? 0) + multiplicationFactor);\n}","import { createSelector } from '../../../utils/createSelector';\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","export const gridDimensionsSelector = state => state.dimensions;","// TODO v6: rename to gridEditingStateSelector\nexport const gridEditRowsStateSelector = state => state.editRows;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridSortedRowEntriesSelector } from '../sorting/gridSortingSelector';\nimport { gridColumnLookupSelector } from '../columns/gridColumnsSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridLogicOperator } from '../../../models';\nimport { getDefaultGridFilterModel } from './gridFilterState';\nimport { buildWarning } from '../../../utils/warning';\nimport { getPublicApiRef } from '../../../utils/getPublicApiRef';\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from '../columns';\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nconst filterModelDisableMultiColumnsFilteringWarning = buildWarning(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nconst filterModelMissingItemIdWarning = buildWarning('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\nconst filterModelMissingItemOperatorWarning = buildWarning('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    filterModelDisableMultiColumnsFilteringWarning();\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (hasItemsWithoutIds) {\n    filterModelMissingItemIdWarning();\n  }\n  if (hasItemWithoutOperator) {\n    filterModelMissingItemOperatorWarning();\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-restricted-syntax, no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    /* eslint-enable no-restricted-syntax, no-labels */\n\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { createSelector } from '../../../utils/createSelector';\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { createSelector } from '../../../utils/createSelector';\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from '../filter/gridFilterSelector';\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from '../rows/gridRowsSelector';\nimport { getPageCount } from './gridPaginationUtils';\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPageSizeSelector, gridPaginationRowCountSelector, (pageSize, rowCount) => getPageCount(rowCount, pageSize));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import { buildWarning } from '../../../utils/warning';\nimport { GridSignature } from '../../utils';\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  return 0;\n};\nexport const noRowCountInServerMode = buildWarning([\"MUI X: the 'rowCount' prop is undefined while using paginationMode='server'\", 'For more detail, see http://mui.com/components/data-grid/pagination/#basic-implementation'], 'error');\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","import { GridSignature } from '../../utils/useGridApiEventHandler';\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from './gridRowsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The data grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp\n  });\n};\nexport const isAutoGeneratedRow = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutoGeneratedRow(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup)\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from '../../../utils/domUtils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector,\n// TODO rows v6: Is this the best approach ?\n(sortedIds, idRowsLookup) => sortedIds.map(id => ({\n  id,\n  model: idRowsLookup[id] ?? {}\n})));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { buildWarning } from '../../../utils/warning';\nconst sortModelDisableMultiColumnsSortingWarning = buildWarning(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the `DataGrid`, this prop is always `true`.'], 'error');\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      sortModelDisableMultiColumnsSortingWarning();\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import { createSelector, createSelectorMemoized } from '../../../utils/createSelector';\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useTheme } from '@mui/material/styles';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridSelector } from '../../utils/useGridSelector';\nimport { useResizeObserver } from '../../utils/useResizeObserver';\nimport { useRunOnce } from '../../utils/useRunOnce';\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from '../columns/gridColumnsSelector';\nimport { gridDimensionsSelector } from '../dimensions/gridDimensionsSelectors';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from '../focus/gridFocusStateSelector';\nimport { useGridVisibleRows, getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { useGridApiEventHandler } from '../../utils';\nimport { clamp, range } from '../../../utils/utils';\nimport { selectedIdsLookupSelector } from '../rowSelection/gridRowSelectionSelector';\nimport { gridRowsMetaSelector } from '../rows/gridRowsMetaSelector';\nimport { getFirstNonSpannedColumnToRender } from '../columns/gridColumnsUtils';\nimport { getMinimalContentHeight } from '../rows/gridRowsUtils';\nimport { gridRenderContextSelector, gridVirtualizationEnabledSelector, gridVirtualizationColumnEnabledSelector } from './gridVirtualizationSelectors';\nimport { EMPTY_RENDER_CONTEXT } from './useGridVirtualization';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (mode, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(mode, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nconst isJSDOM = typeof window !== 'undefined' ? /jsdom/.test(window.navigator.userAgent) : false;\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const enabled = useGridSelector(apiRef, gridVirtualizationEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const theme = useTheme();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = React.useRef(null);\n  const scrollbarHorizontalRef = React.useRef(null);\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(theme.direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = () => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(theme.direction, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  };\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (theme.direction === 'ltr') {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (theme.direction === 'rtl') {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = rowIndexInPage === rowModels.length - 1;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, theme.direction, pinnedColumns.left.length);\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n      rows.push( /*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible\n      }, rowProps), id));\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (isLastVisible) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth >= outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight]);\n  const contentSize = React.useMemo(() => {\n    // In cases where the columns exceed the available width,\n    // the horizontal scrollbar should be shown even when there're no rows.\n    // Keeping 1px as minimum height ensures that the scrollbar will visible if necessary.\n    const height = Math.max(contentHeight, 1);\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      height\n    };\n    if (rootProps.autoHeight) {\n      if (currentPage.rows.length === 0) {\n        size.height = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n      } else {\n        size.height = contentHeight;\n      }\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    if (enabled) {\n      // TODO a scroll reset should not be necessary\n      scrollerRef.current.scrollLeft = 0;\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabled, gridRootRef, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabled, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      tabIndex: -1,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation'\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabled, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabled,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  let renderContext;\n  if (!inputs.enabled) {\n    renderContext = {\n      firstRowIndex: 0,\n      lastRowIndex: inputs.rows.length,\n      firstColumnIndex: 0,\n      lastColumnIndex: inputs.visibleColumns.length\n    };\n  } else {\n    const {\n      top,\n      left\n    } = scrollPosition;\n    const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    const firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    if (inputs.enabledForColumns) {\n      let hasRowWithAutoHeight = false;\n      const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n        firstIndex: firstRowIndex,\n        lastIndex: lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: inputs.rows.length,\n        bufferBefore: scrollCache.buffer.rowBefore,\n        bufferAfter: scrollCache.buffer.rowAfter,\n        positions: inputs.rowsMeta.positions,\n        lastSize: inputs.lastRowHeight\n      });\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n      if (!hasRowWithAutoHeight) {\n        firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n          atStart: true,\n          lastPosition: inputs.columnsTotalWidth\n        });\n        lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n      }\n    }\n    renderContext = {\n      firstRowIndex,\n      lastRowIndex,\n      firstColumnIndex,\n      lastColumnIndex\n    };\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, direction, pinnedLeftLength) {\n  const factor = direction === 'ltr' ? 1 : -1;\n  const left = factor * (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(mode, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (mode === 'rtl') {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const virtualization = {\n    enabled: !props.disableVirtualization,\n    enabledForColumns: true,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from '../../utils/cleanupTracking/TimerBasedCleanupTracking';\nimport { FinalizationRegistryBasedCleanupTracking } from '../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking';\n/**\n * Signal to the underlying logic what version of the public component API\n * of the data grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  // Validate that only one per event name?\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import * as React from 'react';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the data grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the data grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import * as React from 'react';\nimport { useLazyRef } from './useLazyRef';\nimport { useOnMount } from './useOnMount';\nimport { buildWarning } from '../../utils/warning';\nimport { fastObjectShallowCompare } from '../../utils/fastObjectShallowCompare';\nconst stateNotInitializedWarning = buildWarning(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      stateNotInitializedWarning();\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from '../features/pagination/gridPaginationSelector';\nimport { gridExpandedSortedRowEntriesSelector } from '../features/filter/gridFilterSelector';\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { GridPinnedColumnPosition } from '../../hooks/features/columns';\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 19V5h2v14z\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon( /*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import { GridPinnedColumnPosition } from '../hooks/features/columns/gridColumnsInterfaces';\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = new WeakMap();\nconst missingInstanceIdWarning = buildWarning(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\nexport const createSelector = (a, b, c, d, e, f, ...rest) => {\n  if (rest.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { gridClasses } from '../constants/gridClasses';\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\nfunction escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${field}\"]`);\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${field}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'left',\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: 'right',\n    filterFn: index => index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'left',\n    colIndex,\n    filterFn: index => index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: 'right',\n    colIndex,\n    filterFn: index => index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${field}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${field}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested data grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from './fastObjectShallowCompare';\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable no-restricted-syntax */\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  /* eslint-enable no-restricted-syntax */\n  /* eslint-enable guard-for-in */\n\n  return aLength === bLength;\n}","/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isEscapeKey = key => key === 'Escape';\n\n/**\n * @deprecated there is no meaninfuly logic abstracted, use event.key directly.\n */\nexport const isTabKey = key => key === 'Tab';\n\n// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  if ((event.ctrlKey || event.metaKey) && event.key.toLowerCase() === 'v' && !event.shiftKey && !event.altKey) {\n    return true;\n  }\n  return false;\n}","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","export const buildWarning = (message, gravity = 'warning') => {\n  let alreadyWarned = false;\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  return () => {\n    if (!alreadyWarned) {\n      alreadyWarned = true;\n      if (gravity === 'error') {\n        console.error(cleanMessage);\n      } else {\n        console.warn(cleanMessage);\n      }\n    }\n  };\n};\nexport const wrapWithWarningOnCall = (method, message) => {\n  if (process.env.NODE_ENV === 'production') {\n    return method;\n  }\n  const warning = buildWarning(message);\n  return (...args) => {\n    warning();\n    return method(...args);\n  };\n};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}"],"names":["_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","waveKeyframe","SkeletonRoot","name","slot","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","theme","radiusUnit","shape","borderRadius","radiusValue","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","maxWidth","action","hover","inProps","ref","className","component","style","other","Boolean","children","classes","slots","useUtilityClasses","as","getSkeletonUtilityClass","forceDebug","window","localStorage","getItem","noop","noopLogger","debug","info","warn","error","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","indexOf","Error","reduce","loggerObj","method","idx","args","message","Store","create","value","constructor","_value","this","listeners","subscribe","fn","add","delete","getSnapshot","update","forEach","l","Set","EventManager","maxListeners","warnOnce","events","on","eventName","listener","options","collection","highPriority","Map","regular","isFirst","set","removeListener","removeAllListeners","emit","highPriorityListeners","Array","from","keys","regularListeners","i","length","has","apply","once","that","oneTimeListener","SYMBOL_API_PRIVATE","Symbol","globalId","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","sorting","visibleRowsLookupCreation","useGridInitialization","inputApiRef","privateApiRef","publicApiRef","current","existingPrivateApi","state","privateApi","store","instanceId","id","getPublicApi","register","methods","Object","methodName","currentPrivateMethod","spying","target","publicApi","currentPublicMethod","caches","eventManager","createPrivateAPI","createPublicAPI","publishEvent","params","event","defaultMuiPrevented","undefined","isPropagationStopped","isSyntheticEvent","details","signature","DataGridPro","api","subscribeEvent","handler","useGridApiMethod","useGridApiInitialization","apiRef","rootElementRef","mainElementRef","virtualScrollerRef","useGridRefs","useTheme","isFirstEffect","setState","useGridTheme","getLogger","logger","toString","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","reason","newState","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","push","hasPropChanged","propModel","map","el","join","model","propOnChange","changeEvent","updateControlState","key","previousState","publicStateApi","forceUpdate","privateStateApi","useGridStateInitialization","cache","isRunning","runAppliers","groupCache","values","appliers","callback","preProcessingPrivateApi","registerPipeProcessor","group","processor","processors","processorsAsArray","get","registerPipeApplier","applier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","unstable_applyPipeProcessors","context","result","useGridPipeProcessing","availableStrategies","strategiesCache","strategyProcessingApi","registerStrategyProcessor","strategyName","processorName","cleanup","_ref","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","applyStrategyProcessor","activeStrategy","strategyGroup","availableStrategyEntry","entries","find","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","getLocaleText","localeText","useGridLocaleText","rootProps","useGridInitializeState","initializer","isInitialized","sanitizeCellValue","delimiterCharacter","shouldAppendQuotes","escapedValue","replace","some","delimiter","includes","serializeCellValue","cellParams","ignoreValueFormatter","columnType","colDef","type","String","toISOString","formattedValue","CSVRow","rowString","isEmpty","addValue","getRowString","writeToClipboardPolyfill","data","span","document","createElement","whiteSpace","userSelect","opacity","textContent","body","appendChild","range","createRange","selectNode","selection","getSelection","removeAllRanges","addRange","execCommand","removeChild","columnMenuStateInitializer","columnMenu","open","useGridRegisterPipeProcessor","random","registerPreProcessor","useFirstRender","isFirstRender","useGridRegisterPipeApplier","columnsStateInitializer","columnsState","columnsToUpsert","columns","initialState","columnVisibilityModel","keepOnlyColumnsToUpsert","pinnedColumns","mergeColumnsState","densityStateInitializer","density","getColumnsToExport","fields","currentColumns","field","column","col","allColumns","filter","disableExport","defaultGetRowsToExport","filteredSortedRowIds","rowTree","selectedRows","getSelectedRows","bodyRows","pinnedRows","topPinnedRowsIds","top","row","bottomPinnedRowsIds","bottom","unshift","size","useGridCsvExport","useGridLogger","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","csvExport","getDataAsCsv","rowIds","includeHeaders","includeColumnGroupsHeaders","CSVBody","acc","getCellParams","serializeRow","trim","filteredColumns","headerRows","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","max","headerGroupRow","columnGroupId","columnGroup","headerName","groupId","mainHeaderRow","buildCSV","getRowsToExport","exportDataAsCsv","csv","blob","extension","filename","title","fullName","HTMLAnchorElement","prototype","url","URL","createObjectURL","a","href","download","click","setTimeout","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","csvExportApi","addExportMenuButtons","initialValue","csvOptions","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","paginationModel","rowCount","pageSize","pageCount","page","validPage","useGridRegisterStrategyProcessor","filterStateInitializer","filterModel","disableMultipleColumnsFiltering","filteredRowsLookup","filteredDescendantCountLookup","visibleRowsLookup","getVisibleRowsLookup","getVisibleRowsLookupState","tree","rows","createMemoizedValues","defaultMemoize","focusStateInitializer","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","getLeftColumnIndex","currentColIndex","firstColIndex","lastColIndex","direction","getRightColumnIndex","paginationStateInitializer","autoPageSize","pagination","preferencePanelStateInitializer","preferencePanel","_excluded2","editingStateInitializer","editRows","rowsStateInitializer","getRowId","loading","rowCountProp","loadingProp","previousTree","previousTreeDepths","flatRowTreeCreationMethod","updates","rowId","depth","parent","groupingKey","groupingName","treeDepths","dataRowIds","createFlatRowTree","actions","idsToRemoveFromRootGroup","remove","idToDelete","insert","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","isArray","rowSelectionStateInitializer","rowSelection","rowSelectionModel","sortingStateInitializer","sortModel","disableMultipleColumnsSorting","sortedRows","scrollIntoView","dimensions","clientHeight","scrollTop","offsetHeight","offsetTop","elementBottom","EMPTY_SIZE","EMPTY_DIMENSIONS","isReady","viewportOuterSize","viewportInnerSize","contentSize","minimumSize","hasScrollX","hasScrollY","scrollbarSize","headerHeight","rowWidth","rowHeight","columnsTotalWidth","leftPinnedWidth","rightPinnedWidth","headersTotalHeight","topContainerHeight","bottomContainerHeight","dimensionsStateInitializer","rowsMetaStateInitializer","rowsMeta","currentPageTotalHeight","positions","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","calculateCellColSpan","lookup","columnIndex","minFirstColumnIndex","maxLastColumnIndex","columnsLength","getRow","getRowValue","colSpan","setCellColSpanInfo","spannedByColSpan","cellProps","computedWidth","j","nextColumnIndex","rightVisibleCellIndex","min","leftVisibleCellIndex","cellColSpanInfo","recurrentUnwrapGroupingColumnModel","columnGroupNode","parents","unwrappedGroupingModelToComplete","child","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","unwrappedGroupingModel","pinnedFields","getParents","groupingHeaderStructure","maxDepth","haveSameParents","field1","field2","slice","depthStructure","structure","newField","columnFields","lastGroup","prevField","left","right","createGroupLookup","groupLookup","node","groupParam","subTreeLookup","columnGroupsStateInitializer","visibleColumnFields","columnGroupsHeaderStructure","columnGrouping","headerStructure","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","trackFinger","currentTouchId","changedTouches","touch","identifier","x","clientX","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","preventDefault","stopImmediatePropagation","columnResizeStateInitializer","columnResize","resizingColumnField","useGridColumnResize","colDefRef","previousMouseClickEvent","columnHeaderElementRef","headerFilterElementRef","groupHeaderElementsRef","cellElementsRef","leftPinnedCellsAfterRef","rightPinnedCellsBeforeRef","fillerLeftRef","fillerRightRef","leftPinnedHeadersAfterRef","rightPinnedHeadersBeforeRef","stopResizeEventTimeout","useTimeout","touchId","updateWidth","prevWidth","offsetWidth","widthDiff","flex","minWidth","headerFilterElement","element","div","finalWidth","getAttribute","setProperty","pinnedPosition","LEFT","updateProperty","header","RIGHT","finishResize","nativeEvent","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","start","storeReferences","separator","xStart","columnHeadersContainerRef","querySelector","gridClasses","headerFilterRow","side","classList","contains","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","getBoundingClientRect","handleResizeMouseUp","useEventCallback","handleResizeMouseMove","buttons","handleTouchEnd","handleTouchMove","finger","handleTouchStart","cellSeparator","columnHeaderElement","getColumn","doc","ownerDocument","currentTarget","addEventListener","removeProperty","removeEventListener","pointerEvents","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","button","cursor","handleColumnSeparatorDoubleClick","disableAutosize","resizable","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","promise","selector","useGridSelector","resolve","Promise","reject","_resolve","_reject","createControllablePromise","useColumnVirtualizationDisabled","isAutosizingRef","async","userOptions","orderedFields","c","unstable_setColumnVirtualization","widthByField","autosizing","widths","filteredWidths","includeOutliers","inputValues","factor","sort","b","q1","floor","q3","iqr","deviation","v","excludeOutliers","outliersFactor","columnHeaderTitle","columnHeaderTitleContainerContent","iconContainer","iconButtonContainer","menuContainer","menuIcon","getComputedStyle","paddingWidth","parseInt","paddingLeft","paddingRight","scrollWidth","clientWidth","hasColumnMin","hasColumnMax","Infinity","maxContent","extractColumnWidths","newColumns","expand","totalWidth","total","remainingWidth","getRootDimensions","widthPerColumn","updateColumns","newColumn","index","getColumnHeaderElement","useOnMount","autosizeOnMount","then","useGridNativeEventListener","passive","useGridApiEventHandler","onColumnResize","onColumnWidthChange","property","delta","useDataGridComponent","composeClasses","cellCheckbox","columnHeaderCheckbox","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","checkboxSelection","haveSelectionColumn","useGridRowSelectionPreProcessors","useGridRowsPreProcessors","initialCurrentPageRows","useGridVisibleRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","colIndex","closestColumnToUse","visibleSortedRows","nextCellColSpanInfo","unstable_getCellColSpanInfo","rowIndexRelativeToAllRows","findIndex","scrollToIndexes","rowIndex","getVisibleColumns","setCellFocus","goToHeader","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","ctrlKey","metaKey","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","rowIndexBefore","shiftKey","nextRowIndex","checkIfCanStartEditing","useGridKeyboardNavigation","runIfRowSelectionIsEnabled","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","isRowSelectable","propIsRowSelectable","canHaveMultipleSelection","visibleRows","expandMouseRowRangeSelection","endId","startId","isSelected","isRowSelected","visibleRowIds","startIndex","endIndex","selectRowRange","setRowSelectionModel","DataGrid","getRowParams","rowNode","getRowNode","selectRow","resetSelection","newSelection","selectRows","ids","selectableIds","selectionLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPublicApi","selectionPrivateApi","removeOutdatedSelection","keepNonExistentRowsSelected","currentSelection","rowsLookup","hasChanged","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","closest","preventSelectionOnShift","handleRowSelectionCheckboxChange","handleHeaderSelectionCheckboxChange","rowsToBeSelected","checkboxSelectionVisibleOnly","items","getCellMode","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelection","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","updateRenderContext","getAllColumns","useVisibleColumns","getColumnPosition","setColumnVisibilityModel","setColumnVisibility","isVisible","newModel","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","hasBeenResized","columnApi","columnReorderApi","stateExportPreProcessing","prevState","columnsStateToExport","columnVisibilityModelToExport","exportOnlyDirtyModels","colDefDimensions","propertyName","propertyValue","stateRestorePreProcessing","columnVisibilityModelToImport","stateToRestore","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","slotProps","addColumnMenuItems","columnMenuItems","disableColumnSelector","prevInnerWidth","hydrateColumns","useGridColumns","currentPage","lastUpdateMs","Date","now","timeout","getRowIdProp","throttledRowsChange","throttle","run","clear","throttleRemainingTimeMs","throttleRowsMs","setRows","prevCache","rowsBeforePartialUpdates","updateRows","nonPinnedRowsUpdates","pinnedRowsCache","prevModel","idLookup","previousCache","getRowModels","dataRows","idRowsLookup","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","childrenExpanded","getRowGroupChildren","skipAutoGeneratedRows","applySorting","applyFiltering","groupNode","sortedRowIds","childId","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","firstRowToRender","newRows","dataRowIdToModelLookup","dataRowIdToIdLookup","seenIds","rowModel","removedRowId","rowTreeNodeConfig","rowProApi","groupRows","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","totalTopLevelRowCount","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","loadingPropBeforePartialUpdates","isNewRowCountAlreadyInState","rowCountPropBeforePartialUpdates","totalRowCount","useGridRows","useGridParamsApi","columnSpanningPublicApi","columnSpanningPrivateApi","calculateColSpan","minFirstColumn","maxLastColumn","handleColumnReorderChange","useGridColumnSpanning","columnGroupingApi","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","editMode","Cell","throwIfNotEditable","isCellEditable","throwIfNotInMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","cellFocusOut","which","escapeKeyDown","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editingState","updateCellModesModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","newValue","getCellValue","isProcessingProps","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","catch","editingApi","editingPrivateApi","setCellEditingEditCellValue","debounceMs","unstable_skipValueParser","skipValueParser","parsedValue","valueParser","changeReason","preProcessEditCellProps","valueSetter","useEnhancedEffect","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","Row","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","clearTimeout","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","processedProps","thisField","fieldColumn","_editingState$id2","all","copyOfPrevRowModesModel","useGridRowEditing","debounceMap","isCellEditableProp","editable","renderEditCell","debounces","runCallback","debouncedField","editingSharedApi","setEditCellValue","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","unstable_getEditCellMeta","editingSharedPrivateApi","useGridEditing","lastClickedCell","publishCellFocusOut","focusedCell","getColumnGroupHeaderFocus","columnIndexToFocus","visibleColumns","paginationMode","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","getCellElement","handleCellModeChange","handleRowSet","handlePaginationModelChange","currentFocusedCell","focusApi","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","hidePreferences","preferencePanelState","openedPanelValue","doNotHidePanel","hidePreferencesDelayed","showPreferences","panelId","labelId","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","isRowMatchingFilters","filterMode","disableEval","filteringResult","visibleRowsLookupState","addColumnMenuItem","filterable","disableColumnFilter","applyFilters","upsertFilterItem","item","itemIndex","filterItem","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","filterOperator","filterOperators","operator","requiresFilterValue","newFilterItems","filterItemOnTarget","targetColumn","filters","hideFilterPanel","setFilterLogicOperator","logicOperator","setQuickFilterValues","quickFilterValues","filterApi","unstable_applyFilters","ignoreDiacritics","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","useLazyRef","flatFilteringMethod","filterCache","passingFilterItems","passingQuickFilterValues","isRowPassing","footerId","handleColumnsChange","columnsLookup","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","sortItem","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortingOrder","sortable","disableColumnSorting","sortingMode","sortRowList","setSortModel","sortColumn","allowMultipleSorting","sortApi","getSortModel","getSortedRows","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","rootGroupNode","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","setDensity","newDensity","densityApi","useGridDensity","densityFactor","onPaginationModelChange","paginationModelApi","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","visibleTopLevelRowCount","onRowCountChange","paginationRowCountApi","setRowCount","exportedRowCount","restoredRowCount","useGridRowCount","useGridPagination","getRowHeight","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","rowsHeightLookup","lastMeasuredRowIndex","hasRowWithAutoHeight","gridPaginationSelector","validRowHeight","hydrateRowsMeta","calculateRowProcessedSizes","sizes","baseCenter","isResized","autoHeight","needsFirstMeasurement","baseRowHeight","existingBaseRowHeight","rowHeightFromUser","initialHeights","indexRelativeToCurrentPage","spacing","isFirstVisible","isLastVisible","spacingTop","spacingBottom","processedSizes","otherSizes","setRowHeight","debouncedHydrateRowsMeta","debounce","rowPositionsDebounceMs","storeMeasuredRowHeight","needsHydration","rowHasAutoHeight","getLastMeasuredRowIndex","setLastMeasuredRowIndex","resetRowHeights","rowsMetaApi","unstable_setLastMeasuredRowIndex","unstable_getRowHeight","unstable_getRowInternalSizes","unstable_setRowHeight","unstable_storeRowHeightMeasurement","rowsMetaPrivateApi","useGridRowsMeta","colRef","scrollCoordinates","columnPositions","cellWidth","abs","scrollLeft","gridRowsMetaSelector","elementIndex","targetOffsetHeight","scroll","scrollApi","getScrollPosition","useGridScroll","showColumnMenu","columnMenuState","hideColumnMenu","columnLookup","visibleOrderedFields","fieldIndex","columnMenuApi","useGridColumnMenu","previousGridState","previousColumnVisibility","previousRows","updateGridColumnsForPrint","includeCheckboxes","exportedColumnFields","newColumnVisibilityModel","updateGridRowsForPrint","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","hideFooter","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","main","overflow","contain","gridToolbarElementHeight","toolbarContainer","gridFooterElementHeight","footerContainer","computedTotalHeight","columnHeaderHeight","boxSizing","gridFooterElement","position","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","split","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","attributes","attr","setAttribute","nodeName","nodeValue","contentWindow","print","handlePrintWindowAfterPrint","restoreState","unstable_setVirtualization","printExportApi","exportDataAsPrint","exportState","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","matches","printOptions","useGridPrintExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","toLowerCase","altKey","selectionEnd","selectionStart","textToCopy","navigator","clipboard","writeText","onClipboardCopy","useGridClipboard","errorShown","rootDimensionsRef","w","savedSize","setSavedSize","debouncedSetSavedSize","func","wait","lastArgs","later","throttled","resizeThrottleMs","previousSize","setDimensions","resize","computedStyle","ownerWindow","parseFloat","hasHeightChanged","hasWidthChanged","renderContext","lastRowIndex","firstRowIndex","updateDimensions","rootElement","pinnedRowsHeight","scrollDiv","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPublic","apiPrivate","k","Number","isFirstSizing","handleResize","isJSDOM","test","userAgent","onResize","useGridDimensions","onColumnHeaderClick","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","statePersistenceApi","useGridStatePersistence","useGridVirtualization","DataGridRaw","useDataGridProps","GridContextProvider","GridRoot","sx","forwardedProps","GridHeader","GridFooterPlaceholder","propTypes","isRequired","columnBufferPx","disableColumnMenu","disableColumnResize","disableDensitySelector","disableMultipleRowSelection","disableVirtualization","experimentalFeatures","warnIfFocusStateIsNotSynced","filterDebounceMs","quickFilterExcludeHiddenColumns","quickFilterLogicOperator","getCellClassName","getDetailPanelContent","getRowClassName","hideFooterPagination","hideFooterSelectedRowCount","nonce","onColumnOrderChange","pageSizeOptions","label","rowBufferPx","rowSpacingType","showCellVerticalBorder","showColumnVerticalBorder","GridNoResultsOverlay","noResultsOverlayLabel","useGridApiContext","GridOverlay","GridColumnUnsortedIcon","useGridRootProps","nextSortDirection","Icon","columnSortedAscendingIcon","columnSortedDescendingIcon","iconSlots","booleanCellTrueIcon","booleanCellFalseIcon","columnMenuIcon","openFilterButtonIcon","filterPanelDeleteIcon","columnFilteredIcon","columnSelectorIcon","columnUnsortedIcon","columnResizeIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","moreActionsIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterIcon","quickFilterClearIcon","columnMenuHideIcon","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterIcon","columnMenuManageColumnsIcon","columnMenuClearIcon","loadIcon","filterPanelAddIcon","filterPanelRemoveAllIcon","columnReorderIcon","baseCheckbox","baseTextField","baseFormControl","baseSelect","baseButton","baseIconButton","baseInputAdornment","baseTooltip","basePopper","baseInputLabel","baseSelectOption","native","baseChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","GridCell","skeletonCell","GridSkeletonCell","columnHeaderFilterIconButton","GridColumnHeaderFilterIconButton","GridColumnMenu","columnHeaders","GridColumnHeaders","detailPanels","footer","GridFooter","footerRowCount","GridRowCount","toolbar","loadingOverlay","GridLoadingOverlay","noResultsOverlay","noRowsOverlay","GridNoRowsOverlay","GridPagination","GridFilterPanel","GridColumnsPanel","G","columnsManagement","GridColumnsManagement","panel","GridPanel","GridRow","DATA_GRID_FORCED_PROPS","hideFooterRowCount","disableColumnReorder","keepColumnPositionIfDraggedOutside","DATA_GRID_PROPS_DEFAULT_VALUES","defaultSlots","themedProps","allProps","useThemeProps","startsWith","groupForwardedProps","obj","TypeError","_objectDestructuringEmpty","overrides","computeSlots","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","aggregable","align","headerAlign","renderCell","getApplyQuickFilterFn","GRID_BOOLEAN_COL_DEF","sortComparator","valueFormatter","pastedValueParser","stringToBoolean","getGridBooleanOperators","getApplyFilterFn","valueAsBoolean","InputComponent","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","throwIfNotDateObject","gridDateFormatter","toLocaleDateString","gridDateTimeFormatter","toLocaleString","GRID_DATE_COL_DEF","GRID_DATETIME_COL_DEF","buildApplyFilterFn","compareFn","showTime","keepHours","date","setSeconds","setHours","time","getTime","dateCopy","getGridDateOperators","value1","value2","InputComponentProps","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","GRID_NUMERIC_COL_DEF","parseNumericValue","getGridNumericQuickFilterFn","isNaN","columnValue","getGridNumericOperators","GRID_SINGLE_SELECT_COL_DEF","getOptionLabel","getOptionValue","valueOptions","valueOption","option","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_STRING_COL_DEF","hideable","groupable","pinnable","getGridStringQuickFilterFn","filterRegex","RegExp","getRowFormattedValue","getGridStringOperators","disableTrim","filterItemValue","collator","Intl","Collator","sensitivity","usage","compare","val","filterValue","GridColumnGroupHeader","hasFocus","isLastColumn","indexInSection","sectionLength","gridHasFiller","headerCellRef","columnGroupsLookup","description","headerComponent","render","renderHeaderGroup","renderParams","showLeftBorder","showRightBorder","isDragging","useId","elementId","draggableContainer","titleContainer","titleContainerContent","elementToFocus","publish","mouseEventsHandlers","onKeyDown","onFocus","onBlur","GridGenericColumnHeaderItem","columnMenuOpen","isResizing","sortDirection","isDraggable","columnMenuIconButton","columnTitleIconButtons","GridColumnHeaderRow","styled","columnHeaderRow","GridColumnHeadersRoot","flexDirection","borderTopLeftRadius","borderTopRightRadius","GridBaseColumnHeaders","clsx","role","sortColumnLookup","filterColumnLookup","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnVisibility","hasOtherElementInTabSequence","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","useGridPrivateApiContext","hasVirtualization","offsetLeft","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","firstColumnIndex","lastColumnIndex","rightRenderContext","getColumnsToRender","currentContext","firstColumnToRender","lastColumnToRender","renderedColumns","getFillers","leftOverflow","borderTop","isPinnedRight","isNotPinned","hasScrollbarFiller","leftOffsetWidth","filler","pinnedRight","getCellOffsetStyle","pinnedOffset","getPinnedCellOffset","getColumnHeaders","isFirstColumn","GridColumnHeaderItem","filterItemsCounter","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","separatorSide","GridColumnHeaderSeparator","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","fastMemo","selectedRowCount","selectedRowCountElement","rowCountElement","visibleRowCount","paginationElement","GridPreferencesPanel","panelContent","noRowsLabel","GridPaginationRoot","selectLabel","breakpoints","up","input","lastPage","calculatedValue","ceil","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","count","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","EmptyCell","cellEmpty","refProp","selected","styleProp","focusedColumnIndex","isNotVisible","onClick","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","editRowsState","handleRef","scrollbarWidth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","ariaRowIndex","editing","ResizeObserver","resizeObserver","entry","borderBoxSize","blockSize","contentRect","observe","disconnect","propHandler","publishClick","rowReordering","minHeight","numberOfBaseSizes","maximumSize","rowStyle","maxHeight","rowClassNames","getCell","indexRelativeToAllColumns","NONE","editCellState","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","sectionIndex","leftCells","rightCells","middleColumnsLength","cells","eventHandlers","expandedWidth","emptyCellWidth","cellOffsetLeft","MemoizedGridRow","GridRowCountRoot","alignItems","margin","scrollbarFiller","GridScrollbarFillerCell","GridSelectedRowCountRoot","GridSelectedRowCount","rowSelectedText","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","zIndex","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","GridOverlays","showNoResultsOverlay","overlay","hasActions","getActions","GridActionsCell","focusElementRef","focusedButtonIndex","setFocusedButtonIndex","setOpen","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","o","disabled","hideMenu","handleTouchRippleRef","instance","handleButtonClick","actionsCell","getNewIndex","indexMod","newIndex","stopPropagation","touchRippleRef","fontSize","onClose","menuList","autoFocusItem","closeMenu","renderActionsCell","GridBooleanCellRaw","titleAccess","GridBooleanCell","renderBooleanCell","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","EMPTY_CELL_PARAMS","onMouseDown","onMouseUp","onKeyUp","onDragEnter","onDragOver","cellParamsWithAPI","e","canManageOwnFocus","rootClasses","classNames","valueToRender","cellRef","useForkRef","isSelectionMode","cellSelection","capitalize","publishMouseUp","publishMouseDown","padding","border","cellStyle","activeElement","focusableElement","scrollPosition","handleFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","GridEditBooleanCell","idProp","onValueChange","inputRef","valueState","setValueState","handleChange","checked","htmlFor","onChange","renderEditBooleanCell","StyledInputBase","GridEditDateCell","valueProp","inputProps","isDateTime","valueTransformed","parsedDate","formattedDate","getTimezoneOffset","substr","parsed","formatted","parseValueToDate","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","fullWidth","renderEditDateCell","GridEditInputCellRoot","editInputCell","typography","body2","GridEditInputCell","meta","endAdornment","color","renderEditInputCell","GridEditSingleSelectCell","initialOpen","isSelectNative","MenuProps","otherBaseSelectProps","formattedTargetValue","onOpen","isKeyboardEvent","renderEditSingleSelectCell","randomWidth","Memoized","contentWidth","icon","counter","toggleFilter","getColumnHeaderParams","iconButton","enterDelay","badgeContent","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","sortIndex","showColumnMenuIcon","setShowColumnMenuIcon","isColumnSorted","isColumnFiltered","isColumnNumeric","onDragStart","onDragEnd","columnHeaderSeparatorProps","handleExited","GridColumnHeaderMenu","ContentComponent","contentComponentProps","onExited","showSortIcon","hideSortIcons","GridColumnHeaderSortIcon","draggableContainerProps","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","getIcon","GridColumnHeaderTitleRoot","textOverflow","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","titleRef","tooltip","setTooltip","handleMouseOver","isOver","ariaSort","draggable","columnWidth","GridIconButtonContainerRoot","GridIconButtonContainer","GridCellCheckboxForwardRef","isChecked","checkboxElement","rippleRef","handleKeyDown","isSelectable","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","paginatedVisibleRowIds","filteredSelection","selectionCandidates","currentSelectionSize","isIndeterminate","handleSelectionChange","p","indeterminate","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","every","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","placeholder","InputProps","startAdornment","pl","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","columnsManagementFooter","justifyContent","divider","grey","GridFooterContainerRoot","GridFooterContainer","GridOverlayRoot","alignSelf","columnHeadersStyles","columnSeparator","columnHeaderStyles","GridRootStyles","aggregationColumnHeader","aggregationColumnHeaderLabel","editBooleanCell","cellSkeleton","checkboxInput","columnHeaderDraggableContainer","columnHeaderTitleContainer","filterIcon","iconSeparator","menuIconButton","menuOpen","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","detailPanelToggleCell","borderColor","TableCell","radius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","disabledOpacity","hoverOpacity","hoverColor","selectedOpacity","selectedBackground","mainChannel","selectedHoverBackground","pinnedHoverBackground","blend","pinnedSelectedBackground","pinnedSelectedHoverBackground","selectedStyles","fontWeightMedium","borderWidth","borderStyle","outline","overflowAnchor","groupingCriteriaCell","WebkitTapHighlightColor","lineHeight","outlineWidth","outlineOffset","transition","transitions","duration","shorter","borderBottomWidth","borderBottomStyle","marginRight","marginLeft","touchAction","breakInside","borderTopColor","boxShadow","shadows","paper","booleanCell","secondary","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","groupingCriteriaCellToggle","gamma","f","overlayColor","rgb","GridPanelAnchor","mountedState","setMountedState","GridMenuRoot","menu","modal","GridMenu","savedFocusRef","HTMLElement","handleClickAway","anchorEl","placement","TransitionProps","onClickAway","mouseEvent","popperOnExited","labelledby","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","GridColumnMenuSortItem","columnMenuFilterItem","GridColumnMenuFilterItem","columnMenuColumnsItem","GridColumnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","Divider","useGridColumnMenuSlots","GridColumnMenuContainer","Component","otherProps","StyledMenuList","handleListKeyDown","autoFocus","showFilter","GridColumnMenuHideItem","GridColumnMenuManageItem","showColumns","onSortMenuItemClick","getLabel","gridPanelClasses","GridPanelRoot","GridPaperRoot","isPlaced","setIsPlaced","modifiers","enabled","phase","effect","setAnchorEl","panelAnchor","elevation","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","flexShrink","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","And","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","baseSelectOptionProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","getLogicOperatorLocaleKey","applyValue","BooleanOperatorContainer","GridFilterInputBoolean","clearButton","labelProp","others","filterValueState","setFilterValueState","selectId","baseSelectProps","onFilterChange","shrink","notched","displayEmpty","convertFilterItemValueToInputValue","itemValue","inputType","setMinutes","getMinutes","substring","GridFilterInputDate","filterTimeout","applying","setIsApplying","InputLabelProps","GridFilterInputMultipleSingleSelect","helperText","TextFieldProps","resolvedColumn","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","A","multiple","filterOptions","renderTags","getTagProps","renderInput","GridFilterInputMultipleValue","freeSolo","inputValue","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","currentValueOptions","GridFilterInputValue","newItem","fromInput","getGridFilter","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","startIcon","isSingleSelectColDef","getValueOptions","additionalParams","getValueFromValueOptions","optionValue","_excluded3","GridCsvExportMenuItem","GridPrintExportMenuItem","GridToolbarExport","excelOptions","preProcessedButtons","GridToolbarExportContainer","buttonProps","tooltipProps","exportButtonId","exportMenuId","handleMenuClose","prevOpen","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","getCanScrollMore","maxScrollLeft","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","offset","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","MemoizedGridHeaders","cellTabIndexState","columnsContainerRef","Element","flexGrow","GridMainContainer","ariaAttributes","pinnedRowsCount","treeData","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","scrollbarHeight","expandedHeight","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","overflowY","overflowX","ScrollbarHorizontal","Content","GridVirtualScrollbar","isLocked","lastPosition","scrollbarRef","contentRef","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","Container","Scroller","virtualScroller","GridVirtualScroller","useGridVirtualScroller","getContainerProps","getScrollerProps","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getRows","getDataGridUtilityClass","GRID_DETAIL_PANEL_TOGGLE_FIELD","GRID_DEFAULT_LOCALE_TEXT","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorEquals","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","Provider","gridColumnGroupingSelector","gridColumnGroupsUnwrappedModelSelector","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","gridColumnGroupsHeaderMaxDepthSelector","gridColumnMenuSelector","DEFAULT_GRID_AUTOSIZE_OPTIONS","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","gridColumnFieldsSelector","createSelector","gridColumnLookupSelector","gridColumnDefinitionsSelector","allFields","gridColumnVisibilityModelSelector","gridVisibleColumnDefinitionsSelector","gridVisibleColumnFieldsSelector","gridPinnedColumnsSelector","gridVisiblePinnedColumnDefinitionsSelector","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","currentPosition","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","gridFilterableColumnLookupSelector","gridHasColSpanSelector","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","viewportInnerWidth","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","existingState","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getFirstNonSpannedColumnToRender","lastRowToRender","firstNonSpannedColumnToRender","getTotalHeaderHeight","multiplicationFactor","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","gridDensityFactorSelector","gridDimensionsSelector","gridEditRowsStateSelector","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilterActiveItemsSelector","gridFilterActiveItemsLookupSelector","activeFilters","res","getDefaultGridFilterModel","getPublicApiRef","hasEval","cleanFilterItem","cleanItem","filterModelDisableMultiColumnsFilteringWarning","filterModelMissingItemIdWarning","filterModelMissingItemOperatorWarning","sanitizeFilterModel","hasSeveralItems","hasItemsWithoutIds","hasItemWithoutOperator","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","newFilterItem","applyFilterOnRow","filterItemsApplierId","shouldQuickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","Function","getHasEval","shouldApplyFilter","resultPerItemId","filterItemCore","JSON","stringify","replaceAll","shouldApplyItem","buildAggregatedFilterItemsApplier","isRowMatchingQuickFilter","appliersPerField","quickFilterValue","outer","buildAggregatedQuickFilterApplier","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","gridFocusColumnGroupHeaderSelector","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","gridHeaderFilteringEditFieldSelector","gridHeaderFilteringMenuSelector","gridPaginationModelSelector","gridPaginationRowCountSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","topLevelFirstRowIndex","topLevelLastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","gridPaginatedVisibleSortedGridRowIdsSelector","visibleSortedRowIds","defaultPageSize","getPageCount","getDefaultGridPaginationModel","getValidPage","throwIfPageSizeExceedsTheLimit","signatureProp","gridPreferencePanelStateSelector","GridPreferencePanelsValue","gridRowSelectionStateSelector","selectedGridRowsCountSelector","selectedGridRowsSelector","selectedIdsLookupSelector","isMultipleRowSelectionEnabled","gridRowsStateSelector","gridRowCountSelector","gridRowsLoadingSelector","gridTopLevelRowCountSelector","gridRowsLookupSelector","gridRowsDataRowIdToIdLookupSelector","gridRowTreeSelector","gridRowGroupingNameSelector","gridRowTreeDepthsSelector","gridRowMaximumTreeDepthSelector","nodeCount","gridDataRowIdsSelector","gridAdditionalRowGroupsSelector","additionalRowGroups","gridPinnedRowsSelector","rawPinnedRows","rowEntry","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","buildRootGroup","groupingField","isAutoGenerated","childrenFromPath","checkGridRowIdIsValid","detailErrorMessage","getRowIdFromRowModel","createRowsInternalCache","getTopLevelRowCount","getRowsStateFromCache","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","groupingParamsWithHydrateRows","modify","idToActionLookup","isAutoGeneratedRow","getTreeNodeDescendants","parentId","validDescendants","childDescendants","updateCacheWithNewRows","uniqueUpdates","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","calculatePinnedRowsHeight","getMinimalContentHeight","MissingRowIdError","rawValue","cellFocus","cellTabIndex","getRowElement","paramsApi","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","gridSortedRowEntriesSelector","sortedIds","gridSortModelSelector","gridSortColumnLookupSelector","sanitizeSortModel","mergeStateWithSortModel","buildAggregatedSortingApplier","comparatorList","comparator","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","getNextGridSortDirection","currentIdx","gridNillComparator","v1","v2","gridStringOrNumberComparator","nillResult","gridNumberComparator","gridDateComparator","gridVirtualizationSelector","virtualization","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridRenderContextSelector","gridRenderContextColumnsSelector","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","outerSize","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","gridRootRef","mainRef","scrollerRef","scrollbarVerticalRef","scrollbarHorizontalRef","contentHeight","hasColSpan","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","createScrollCache","verticalBuffer","MINIMUM_COLUMN_WIDTH","buffer","bufferForDirection","nextRenderContext","context1","context2","didRowsIntervalChange","triggerUpdateRenderContext","newScroll","dx","dy","isScrolling","DOWN","UP","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","handleWheel","needsHorizontalScrollbar","scrollerStyle","initialRenderContext","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","rowIndexes","virtualRowIndex","rowProps","rowIndexInPage","tabbableCell","currentRenderContext","computeOffsetLeft","getInfiniteLoadingTriggerElement","lastRowId","onScroll","onWheel","onTouchMove","at","lastColumn","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","columnBefore","columnAfter","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","horizontalBuffer","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","setVirtualization","TimerBasedCleanupTracking","timeouts","cleanupTimeout","object","unsubscribe","unregisterToken","cleanupToken","unregister","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","unstable_resetCleanupTracking","optionsSubscriberOptions","useGridApiOptionHandler","apiMethods","newLogger","added","setAdded","targetElement","wrapHandler","GridPrivateApiContext","applySelector","acceptsApiRef","isOutputSelector","defaultCompare","is","objectShallowCompare","createRefs","equals","refs","didInit","getVisibleRows","isDevEnvironment","useResizeObserver","fnRef","frameID","observer","cancelAnimationFrame","useRunOnce","condition","didRun","GridArrowUpwardIcon","d","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","isLeaf","GridEditModes","GridCellModes","GridRowModes","GridLogicOperator","GridCellEditStartReasons","GridCellEditStopReasons","GridRowEditStartReasons","GridRowEditStopReasons","shouldCellShowRightBorder","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","createSelectorCreator","memoize","_len","arguments","memoizeOptionsFromArgs","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","pop","_directlyPassedOption2","finalMemoizeOptions","dependencies","dep","dependencyTypes","getDependencies","memoizedResultFunc","assign","lastResult","recomputations","resetRecomputations","WeakMap","checkIsAPIRef","DEFAULT_INSTANCE_ID","rest","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorMemoized","cacheKey","cacheArgsInit","cacheArgs","cacheFn","isOverflown","scrollHeight","findParentElementFromClassName","elem","escapeOperandAttributeSelector","operand","getGridColumnHeaderElement","getGridRowElementSelector","getGridRowElement","getGridCellElement","isEventTargetInPortal","nodeType","getFieldFromHeaderElem","colCellEl","findHeaderElementFromField","findGroupHeaderElementsFromField","findGridCellElementsFromCol","ariaColIndex","queryRows","rowElement","findGridElement","klass","findPinnedCells","filterFn","parseCellColIndex","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findPinnedHeaders","elements","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","findGridHeader","findGridCells","fastObjectShallowCompare","aLength","bLength","isEscapeKey","isTabKey","isPrintableKey","isNavigationKey","isHideMenuKey","isPasteShortcut","isNumber","isFunction","isObject","localStorageAvailable","setItem","removeItem","err","escapeRegExp","clamp","to","isDeepEqual","entriesA","entryA","ArrayBuffer","isView","source","flags","valueOf","hasOwnProperty","call","randomNumberBetween","seed","imul","deepClone","structuredClone","parse","buildWarning","gravity","alreadyWarned","cleanMessage","NOT_FOUND","defaultEqualityCheck","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","prev","next","createCacheKeyComparator","put","getEntries","cacheIndex","createLruCache","memoized","matchingEntry","clearCache"],"sourceRoot":""}